var documenterSearchIndex = {"docs":
[{"location":"tutorials/01_denoising/#Denoising","page":"Denoising","title":"Denoising","text":"","category":"section"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"In this simple notebook, we look at a denoising problem and how the linearized bregman iterations provide a simple and efficient solution.","category":"page"},{"location":"tutorials/01_denoising/#Packages-setup","page":"Denoising","title":"Packages setup","text":"","category":"section"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"# ] registry add https://github.com/slimgroup/SLIMregistryJL.git\n# ] add LinearAlgebra, JOLI, TestImages, ImageView","category":"page"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"using SlimOptim, LinearAlgebra, JOLI, TestImages, PyPlot","category":"page"},{"location":"tutorials/01_denoising/#Use-a-standard-reference-image","page":"Denoising","title":"Use a standard reference image","text":"","category":"section"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"n = 256\nn1, n2 = 2*256, 256\nimg = Float32.(testimage(\"lena_gray_16bit.png\"));","category":"page"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"imshow(img, cmap=\"magma\", vmin=-.5, vmax=.5);","category":"page"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"(Image: png)","category":"page"},{"location":"tutorials/01_denoising/#Measurment-operator","page":"Denoising","title":"Measurment operator","text":"","category":"section"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"A = [joRomberg(n, n; DDT=Float32, RDT=Float32);joRomberg(n, n; DDT=Float32, RDT=Float32)];","category":"page"},{"location":"tutorials/01_denoising/#Setup-transform-domain-operator","page":"Denoising","title":"Setup transform domain operator","text":"","category":"section"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"# Sparse in wavelet domain\nW = joDWT(n, n; DDT=Float32, RDT=Float32);\n# Or with curvelet ifi nstalled\n# W = joCurvelet2D(128, 128; DDT=Float32, RDT=Float32);","category":"page"},{"location":"tutorials/01_denoising/#Measurements","page":"Denoising","title":"Measurements","text":"","category":"section"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"# Make noisy data\nb = A*vec(img);","category":"page"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"imshow(reshape(b, n1, n2), cmap=\"magma\", vmin=-.5, vmax=.5, aspect=.5)","category":"page"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"(Image: png)","category":"page"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"PyObject <matplotlib.image.AxesImage object at 0x14ac18c70>","category":"page"},{"location":"tutorials/01_denoising/#Linearized-bregman","page":"Denoising","title":"Linearized bregman","text":"","category":"section"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"We solve the following l1-l2 optimization problem:","category":"page"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"$","category":"page"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"\\begin{align} \\minx & \\ \\ \\lambda || W x||1 + \\frac{1}{2} ||W x ||_2^2 \\\n          & \\text{s.t. } Ax = b \\end{align} $","category":"page"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"where W is the sparsity promoting transform, x is the unknown image and A is a tall measuremment operator.","category":"page"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"# setup bregman\nopt = bregman_options(maxIter=200, verbose=2, quantile=.1)","category":"page"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"SlimOptim.BregmanParams(2, 1.0e-8, 200, false, true, 0.1)","category":"page"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"sol = bregman(A, W, zeros(Float32, n*n), b, opt);","category":"page"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"Running linearized bregman...\nProgress tolerance: 1.00e-08\nMaximum number of iterations: 200\nAnti-chatter correction: 1\n Iteration     Step Length Bregman residual ||A*x - b||_2^2     Î»\n         1     1.25000e-01     1.48864e+02     4.75737e+03     2.99459e-04 \n         2     1.25000e-01     4.55724e+02     2.67720e+03     2.99459e-04 \n         3     1.25000e-01     7.95676e+02     1.50593e+03     2.99459e-04 \n         4     1.25000e-01     1.11241e+03     8.47091e+02     2.99459e-04 \n         5     1.25000e-01     1.38470e+03     4.76491e+02     2.99459e-04 \n         6     1.25000e-01     1.60846e+03     2.68028e+02     2.99459e-04 \n         7     1.25000e-01     1.78728e+03     1.50766e+02     2.99459e-04 \n         8     1.25000e-01     1.92757e+03     8.48065e+01     2.99459e-04 \n         9     1.25000e-01     2.03627e+03     4.77039e+01     2.99459e-04 \n        10     1.25000e-01     2.11975e+03     2.68337e+01     2.99459e-04 \n        11     1.25000e-01     2.18632e+03     1.50940e+01     1.42984e-03 \n        12     1.25000e-01     2.23547e+03     8.81974e+00     1.42984e-03 \n        13     1.25000e-01     2.27269e+03     4.96397e+00     1.42984e-03 \n        14     1.25000e-01     2.30081e+03     2.79504e+00     1.42984e-03 \n        15     1.25000e-01     2.32200e+03     1.57486e+00     1.42984e-03 \n        16     1.25000e-01     2.33796e+03     8.88252e-01     1.42984e-03 \n        17     1.25000e-01     2.34997e+03     5.01863e-01     1.42984e-03 \n        18     1.25000e-01     2.35899e+03     2.84326e-01     1.42984e-03 \n        19     1.25000e-01     2.36577e+03     1.61829e-01     1.42984e-03 \n        20     1.25000e-01     2.37086e+03     9.28416e-02     1.42984e-03 \n        21     1.25000e-01     2.37761e+03     5.40014e-02     2.52146e-03 \n        22     1.25000e-01     2.38118e+03     1.31801e-01     2.52146e-03 \n        23     1.25000e-01     2.38383e+03     8.25535e-02     2.52146e-03 \n        24     1.25000e-01     2.38582e+03     5.43265e-02     2.52146e-03 \n        25     1.25000e-01     2.38732e+03     3.78512e-02     2.52146e-03 \n        26     1.25000e-01     2.38844e+03     2.79190e-02     2.52146e-03 \n        27     1.25000e-01     2.38929e+03     2.16570e-02     2.52146e-03 \n        28     1.25000e-01     2.38993e+03     1.74611e-02     2.52146e-03 \n        29     1.25000e-01     2.39042e+03     1.44713e-02     2.52146e-03 \n        30     1.25000e-01     2.39080e+03     1.21932e-02     2.52146e-03 \n        31     1.25000e-01     2.39378e+03     1.03789e-02     3.49909e-03 \n        32     1.25000e-01     2.39453e+03     9.09539e-02     3.49909e-03 \n        33     1.25000e-01     2.39511e+03     6.70223e-02     3.49909e-03 \n        34     1.25000e-01     2.39556e+03     5.15073e-02     3.49909e-03 \n        35     1.25000e-01     2.39591e+03     4.11505e-02     3.49909e-03 \n        36     1.25000e-01     2.39618e+03     3.39748e-02     3.49909e-03 \n        37     1.25000e-01     2.39639e+03     2.88185e-02     3.49909e-03 \n        38     1.25000e-01     2.39656e+03     2.49902e-02     3.49909e-03 \n        39     1.25000e-01     2.39669e+03     2.20824e-02     3.49909e-03 \n        40     1.25000e-01     2.39679e+03     1.98347e-02     3.49909e-03 \n        41     1.25000e-01     2.39923e+03     1.80850e-02     4.33748e-03 \n        42     1.25000e-01     2.39967e+03     9.52648e-02     4.33748e-03 \n        43     1.25000e-01     2.40002e+03     7.99760e-02     4.33748e-03 \n        44     1.25000e-01     2.40031e+03     6.95839e-02     4.33748e-03 \n        45     1.25000e-01     2.40054e+03     6.21067e-02     4.33748e-03 \n        46     1.25000e-01     2.40073e+03     5.63292e-02     4.33748e-03 \n        47     1.25000e-01     2.40090e+03     5.15754e-02     4.33748e-03 \n        48     1.25000e-01     2.40105e+03     4.74253e-02     4.33748e-03 \n        49     1.25000e-01     2.40118e+03     4.36792e-02     4.33748e-03 \n        50     1.25000e-01     2.40129e+03     4.01961e-02     4.33748e-03 \n        51     1.25000e-01     2.40320e+03     3.69216e-02     4.96721e-03 \n        52     1.25000e-01     2.40359e+03     9.53462e-02     4.96721e-03 \n        53     1.25000e-01     2.40391e+03     8.20759e-02     4.96721e-03 \n        54     1.25000e-01     2.40419e+03     7.17705e-02     4.96721e-03 \n        55     1.25000e-01     2.40442e+03     6.33917e-02     4.96721e-03 \n        56     1.25000e-01     2.40463e+03     5.63082e-02     4.96721e-03 \n        57     1.25000e-01     2.40481e+03     5.01847e-02     4.96721e-03 \n        58     1.25000e-01     2.40497e+03     4.47861e-02     4.96721e-03 \n        59     1.25000e-01     2.40511e+03     3.99913e-02     4.96721e-03 \n        60     1.25000e-01     2.40525e+03     3.57015e-02     4.96721e-03 \n        61     1.25000e-01     2.40736e+03     3.18678e-02     5.65533e-03 \n        62     1.25000e-01     2.40780e+03     9.48295e-02     5.65533e-03 \n        63     1.25000e-01     2.40817e+03     7.93026e-02     5.65533e-03 \n        64     1.25000e-01     2.40849e+03     6.75133e-02     5.65533e-03 \n        65     1.25000e-01     2.40875e+03     5.82329e-02     5.65533e-03 \n        66     1.25000e-01     2.40898e+03     5.06981e-02     5.65533e-03 \n        67     1.25000e-01     2.40918e+03     4.44525e-02     5.65533e-03 \n        68     1.25000e-01     2.40936e+03     3.91909e-02     5.65533e-03 \n        69     1.25000e-01     2.40951e+03     3.47124e-02     5.65533e-03 \n        70     1.25000e-01     2.40965e+03     3.08569e-02     5.65533e-03 \n        71     1.25000e-01     2.41192e+03     2.75181e-02     6.38341e-03 \n        72     1.25000e-01     2.41240e+03     9.30221e-02     6.38341e-03 \n        73     1.25000e-01     2.41281e+03     7.65585e-02     6.38341e-03 \n        74     1.25000e-01     2.41314e+03     6.43722e-02     6.38341e-03 \n        75     1.25000e-01     2.41343e+03     5.50533e-02     6.38341e-03 \n        76     1.25000e-01     2.41367e+03     4.77050e-02     6.38341e-03 \n        77     1.25000e-01     2.41388e+03     4.17815e-02     6.38341e-03 \n        78     1.25000e-01     2.41406e+03     3.69022e-02     6.38341e-03 \n        79     1.25000e-01     2.41422e+03     3.28233e-02     6.38341e-03 \n        80     1.25000e-01     2.41436e+03     2.93602e-02     6.38341e-03 \n        81     1.25000e-01     2.41674e+03     2.63915e-02     7.13889e-03 \n        82     1.25000e-01     2.41725e+03     9.33843e-02     7.13889e-03 \n        83     1.25000e-01     2.41768e+03     7.64113e-02     7.13889e-03 \n        84     1.25000e-01     2.41803e+03     6.40490e-02     7.13889e-03 \n        85     1.25000e-01     2.41833e+03     5.47431e-02     7.13889e-03 \n        86     1.25000e-01     2.41858e+03     4.75155e-02     7.13889e-03 \n        87     1.25000e-01     2.41880e+03     4.17613e-02     7.13889e-03 \n        88     1.25000e-01     2.41898e+03     3.70686e-02     7.13889e-03 \n        89     1.25000e-01     2.41914e+03     3.31771e-02     7.13889e-03 \n        90     1.25000e-01     2.41928e+03     2.98934e-02     7.13889e-03 \n        91     1.25000e-01     2.42174e+03     2.70862e-02     7.91021e-03 \n        92     1.25000e-01     2.42228e+03     9.49944e-02     7.91021e-03 \n        93     1.25000e-01     2.42273e+03     7.76408e-02     7.91021e-03 \n        94     1.25000e-01     2.42310e+03     6.50968e-02     7.91021e-03 \n        95     1.25000e-01     2.42341e+03     5.57374e-02     7.91021e-03 \n        96     1.25000e-01     2.42366e+03     4.85352e-02     7.91021e-03 \n        97     1.25000e-01     2.42388e+03     4.28481e-02     7.91021e-03 \n        98     1.25000e-01     2.42407e+03     3.82393e-02     7.91021e-03 \n        99     1.25000e-01     2.42423e+03     3.44296e-02     7.91021e-03 \n       100     1.25000e-01     2.42437e+03     3.12197e-02     7.91021e-03 \n       101     1.25000e-01     2.42689e+03     2.84783e-02     8.68707e-03 \n       102     1.25000e-01     2.42745e+03     9.65193e-02     8.68707e-03 \n       103     1.25000e-01     2.42791e+03     7.90365e-02     8.68707e-03 \n       104     1.25000e-01     2.42829e+03     6.64621e-02     8.68707e-03 \n       105     1.25000e-01     2.42860e+03     5.71290e-02     8.68707e-03 \n       106     1.25000e-01     2.42887e+03     4.99854e-02     8.68707e-03 \n       107     1.25000e-01     2.42909e+03     4.43675e-02     8.68707e-03 \n       108     1.25000e-01     2.42928e+03     3.98289e-02     8.68707e-03 \n       109     1.25000e-01     2.42945e+03     3.60829e-02     8.68707e-03 \n       110     1.25000e-01     2.42959e+03     3.29215e-02     8.68707e-03 \n       111     1.25000e-01     2.43216e+03     3.02073e-02     9.47051e-03 \n       112     1.25000e-01     2.43274e+03     9.89313e-02     9.47051e-03 \n       113     1.25000e-01     2.43321e+03     8.12606e-02     9.47051e-03 \n       114     1.25000e-01     2.43361e+03     6.85909e-02     9.47051e-03 \n       115     1.25000e-01     2.43393e+03     5.92209e-02     9.47051e-03 \n       116     1.25000e-01     2.43420e+03     5.20683e-02     9.47051e-03 \n       117     1.25000e-01     2.43443e+03     4.64455e-02     9.47051e-03 \n       118     1.25000e-01     2.43463e+03     4.18961e-02     9.47051e-03 \n       119     1.25000e-01     2.43480e+03     3.81351e-02     9.47051e-03 \n       120     1.25000e-01     2.43494e+03     3.49568e-02     9.47051e-03 \n       121     1.25000e-01     2.43754e+03     3.22196e-02     1.02485e-02 \n       122     1.25000e-01     2.43813e+03     1.00318e-01     1.02485e-02 \n       123     1.25000e-01     2.43862e+03     8.27781e-02     1.02485e-02 \n       124     1.25000e-01     2.43902e+03     7.02139e-02     1.02485e-02 \n       125     1.25000e-01     2.43935e+03     6.09267e-02     1.02485e-02 \n       126     1.25000e-01     2.43963e+03     5.38352e-02     1.02485e-02 \n       127     1.25000e-01     2.43986e+03     4.82562e-02     1.02485e-02 \n       128     1.25000e-01     2.44006e+03     4.37412e-02     1.02485e-02 \n       129     1.25000e-01     2.44023e+03     3.99959e-02     1.02485e-02 \n       130     1.25000e-01     2.44038e+03     3.68180e-02     1.02485e-02 \n       131     1.25000e-01     2.44302e+03     3.40751e-02     1.10259e-02 \n       132     1.25000e-01     2.44362e+03     1.02179e-01     1.10259e-02 \n       133     1.25000e-01     2.44412e+03     8.46594e-02     1.10259e-02 \n       134     1.25000e-01     2.44453e+03     7.21285e-02     1.10259e-02 \n       135     1.25000e-01     2.44487e+03     6.28762e-02     1.10259e-02 \n       136     1.25000e-01     2.44516e+03     5.58117e-02     1.10259e-02 \n       137     1.25000e-01     2.44540e+03     5.02531e-02     1.10259e-02 \n       138     1.25000e-01     2.44560e+03     4.57472e-02     1.10259e-02 \n       139     1.25000e-01     2.44577e+03     4.20006e-02     1.10259e-02 \n       140     1.25000e-01     2.44592e+03     3.88105e-02     1.10259e-02 \n       141     1.25000e-01     2.44856e+03     3.60418e-02     1.17898e-02 \n       142     1.25000e-01     2.44917e+03     1.02472e-01     1.17898e-02 \n       143     1.25000e-01     2.44968e+03     8.53659e-02     1.17898e-02 \n       144     1.25000e-01     2.45009e+03     7.31150e-02     1.17898e-02 \n       145     1.25000e-01     2.45044e+03     6.40482e-02     1.17898e-02 \n       146     1.25000e-01     2.45073e+03     5.71030e-02     1.17898e-02 \n       147     1.25000e-01     2.45097e+03     5.16177e-02     1.17898e-02 \n       148     1.25000e-01     2.45118e+03     4.71545e-02     1.17898e-02 \n       149     1.25000e-01     2.45135e+03     4.34283e-02     1.17898e-02 \n       150     1.25000e-01     2.45150e+03     4.02401e-02     1.17898e-02 \n       151     1.25000e-01     2.45420e+03     3.74608e-02     1.25622e-02 \n       152     1.25000e-01     2.45484e+03     1.04930e-01     1.25622e-02 \n       153     1.25000e-01     2.45536e+03     8.75396e-02     1.25622e-02 \n       154     1.25000e-01     2.45579e+03     7.51056e-02     1.25622e-02 \n       155     1.25000e-01     2.45614e+03     6.59137e-02     1.25622e-02 \n       156     1.25000e-01     2.45644e+03     5.88758e-02     1.25622e-02 \n       157     1.25000e-01     2.45669e+03     5.33115e-02     1.25622e-02 \n       158     1.25000e-01     2.45690e+03     4.87786e-02     1.25622e-02 \n       159     1.25000e-01     2.45708e+03     4.49885e-02     1.25622e-02 \n       160     1.25000e-01     2.45724e+03     4.17442e-02     1.25622e-02 \n       161     1.25000e-01     2.45994e+03     3.89159e-02     1.33246e-02 \n       162     1.25000e-01     2.46059e+03     1.05203e-01     1.33246e-02 \n       163     1.25000e-01     2.46112e+03     8.80553e-02     1.33246e-02 \n       164     1.25000e-01     2.46156e+03     7.57770e-02     1.33246e-02 \n       165     1.25000e-01     2.46192e+03     6.66882e-02     1.33246e-02 \n       166     1.25000e-01     2.46222e+03     5.97201e-02     1.33246e-02 \n       167     1.25000e-01     2.46247e+03     5.42062e-02     1.33246e-02 \n       168     1.25000e-01     2.46269e+03     4.97058e-02     1.33246e-02 \n       169     1.25000e-01     2.46287e+03     4.59313e-02     1.33246e-02 \n       170     1.25000e-01     2.46303e+03     4.26935e-02     1.33246e-02 \n       171     1.25000e-01     2.46575e+03     3.98715e-02     1.40819e-02 \n       172     1.25000e-01     2.46641e+03     1.05433e-01     1.40819e-02 \n       173     1.25000e-01     2.46695e+03     8.84902e-02     1.40819e-02 \n       174     1.25000e-01     2.46739e+03     7.63617e-02     1.40819e-02 \n       175     1.25000e-01     2.46776e+03     6.73878e-02     1.40819e-02 \n       176     1.25000e-01     2.46806e+03     6.05122e-02     1.40819e-02 \n       177     1.25000e-01     2.46832e+03     5.50697e-02     1.40819e-02 \n       178     1.25000e-01     2.46854e+03     5.06265e-02     1.40819e-02 \n       179     1.25000e-01     2.46872e+03     4.69040e-02     1.40819e-02 \n       180     1.25000e-01     2.46888e+03     4.37125e-02     1.40819e-02 \n       181     1.25000e-01     2.47164e+03     4.09215e-02     1.48376e-02 \n       182     1.25000e-01     2.47231e+03     1.06274e-01     1.48376e-02 \n       183     1.25000e-01     2.47286e+03     8.94202e-02     1.48376e-02 \n       184     1.25000e-01     2.47331e+03     7.73723e-02     1.48376e-02 \n       185     1.25000e-01     2.47368e+03     6.84566e-02     1.48376e-02 \n       186     1.25000e-01     2.47400e+03     6.16259e-02     1.48376e-02 \n       187     1.25000e-01     2.47426e+03     5.62199e-02     1.48376e-02 \n       188     1.25000e-01     2.47448e+03     5.18038e-02     1.48376e-02 \n       189     1.25000e-01     2.47466e+03     4.80991e-02     1.48376e-02 \n       190     1.25000e-01     2.47483e+03     4.49140e-02     1.48376e-02 \n       191     1.25000e-01     2.47755e+03     4.21247e-02     1.55749e-02 \n       192     1.25000e-01     2.47823e+03     1.05078e-01     1.55749e-02 \n       193     1.25000e-01     2.47878e+03     8.88411e-02     1.55749e-02 \n       194     1.25000e-01     2.47923e+03     7.72112e-02     1.55749e-02 \n       195     1.25000e-01     2.47960e+03     6.85885e-02     1.55749e-02 \n       196     1.25000e-01     2.47991e+03     6.19594e-02     1.55749e-02 \n       197     1.25000e-01     2.48017e+03     5.66954e-02     1.55749e-02 \n       198     1.25000e-01     2.48039e+03     5.23860e-02     1.55749e-02 \n       199     1.25000e-01     2.48058e+03     4.87545e-02     1.55749e-02 \n       200     1.25000e-01     2.48074e+03     4.56219e-02     1.55749e-02","category":"page"},{"location":"tutorials/01_denoising/#Plot-result-and-convergence","page":"Denoising","title":"Plot result and convergence","text":"","category":"section"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"figure(figsize=(8,8));\nsubplot(221)\nimshow(img, cmap=\"magma\", vmin=-.5, vmax=.5)\ntitle(\"True\")\nsubplot(222)\nimshow(reshape(b, n1, n2), cmap=\"magma\", vmin=-.5, vmax=.5, aspect=.5)\ntitle(\"Measurment\")\nsubplot(223)\nimshow(reshape(sol.x, n, n), cmap=\"magma\", vmin=-.5, vmax=.5)\ntitle(\"recovered\")\nsubplot(224)\nimshow(img - reshape(sol.x, n, n), cmap=\"seismic\", vmin=-.5e-2, vmax=.5e-2)\ntitle(\"Difference x100\")\ntight_layout()","category":"page"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"(Image: png)","category":"page"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"figure()\nsubplot(121)\nplot(sol.Ï_trace/sol.Ï_trace[1], label=\"Objective\")\nlegend()\nsubplot(122)\nplot(sol.r_trace/sol.r_trace[1], label=\"||A*x -b||_2^2\")\nlegend()","category":"page"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"(Image: png)","category":"page"},{"location":"tutorials/01_denoising/","page":"Denoising","title":"Denoising","text":"PyObject <matplotlib.legend.Legend object at 0x14aef2d60>","category":"page"},{"location":"tutorials/02_simple_constrained/#Constrained-Inversion,-basics","page":"Constrained Inversion, basics","title":"Constrained Inversion, basics","text":"","category":"section"},{"location":"tutorials/02_simple_constrained/","page":"Constrained Inversion, basics","title":"Constrained Inversion, basics","text":"In this example, we consider as inple constrained optimization problem an look at bot SPG and PQN algorithms","category":"page"},{"location":"tutorials/02_simple_constrained/","page":"Constrained Inversion, basics","title":"Constrained Inversion, basics","text":"using SlimOptim, LinearAlgebra, PyPlot","category":"page"},{"location":"tutorials/02_simple_constrained/#Problem-definition","page":"Constrained Inversion, basics","title":"Problem definition","text":"","category":"section"},{"location":"tutorials/02_simple_constrained/","page":"Constrained Inversion, basics","title":"Constrained Inversion, basics","text":"We define a standard least square problem wuth constraints on the solution","category":"page"},{"location":"tutorials/02_simple_constrained/","page":"Constrained Inversion, basics","title":"Constrained Inversion, basics","text":"n = 512\nA = randn(n, n);","category":"page"},{"location":"tutorials/02_simple_constrained/#Setup-constraints","page":"Constrained Inversion, basics","title":"Setup constraints","text":"","category":"section"},{"location":"tutorials/02_simple_constrained/","page":"Constrained Inversion, basics","title":"Constrained Inversion, basics","text":"# x has to be be bigger than 2\nfunction proj(x)\n    xp = deepcopy(x)\n    xp[xp .< 2] .= 2\n    return xp\nend","category":"page"},{"location":"tutorials/02_simple_constrained/","page":"Constrained Inversion, basics","title":"Constrained Inversion, basics","text":"proj (generic function with 1 method)","category":"page"},{"location":"tutorials/02_simple_constrained/","page":"Constrained Inversion, basics","title":"Constrained Inversion, basics","text":"x_true = 2 .+ randn(n)\nx_true = proj(x_true);\nb = A*x_true;","category":"page"},{"location":"tutorials/02_simple_constrained/#Define-in-place-objective-and-gradient-functions","page":"Constrained Inversion, basics","title":"Define in place objective and gradient functions","text":"","category":"section"},{"location":"tutorials/02_simple_constrained/","page":"Constrained Inversion, basics","title":"Constrained Inversion, basics","text":"function f(x)\n    return .5*norm(A*x - b)^2\nend\n\nfunction g!(g, x)\n     g .= A'*(A*x - b)\nend\n\nfunction fg!(g, x)\n    f = .5*norm(A*x - b)^2\n    g .= A'*(A*x - b)\n    return f\nend","category":"page"},{"location":"tutorials/02_simple_constrained/","page":"Constrained Inversion, basics","title":"Constrained Inversion, basics","text":"fg! (generic function with 1 method)","category":"page"},{"location":"tutorials/02_simple_constrained/#Inversion","page":"Constrained Inversion, basics","title":"Inversion","text":"","category":"section"},{"location":"tutorials/02_simple_constrained/","page":"Constrained Inversion, basics","title":"Constrained Inversion, basics","text":"spgopt = spg_options(maxIter=200)\npqnopt = pqn_options(maxIter=200)","category":"page"},{"location":"tutorials/02_simple_constrained/","page":"Constrained Inversion, basics","title":"Constrained Inversion, basics","text":"SlimOptim.PQN_params(1, 1.0f-5, 1.0f-7, 200, 0.0001f0, 10, false, true, false, 1.0f-6, 1.0f-7, 10, false, 20)","category":"page"},{"location":"tutorials/02_simple_constrained/","page":"Constrained Inversion, basics","title":"Constrained Inversion, basics","text":"solspg = spg(f, g!, fg!, zeros(n), proj, spgopt);","category":"page"},{"location":"tutorials/02_simple_constrained/","page":"Constrained Inversion, basics","title":"Constrained Inversion, basics","text":"Running SPG...\nNumber of objective function to store: 2\nUsing  spectral projection : true\nMaximum number of iterations: 200\nSPG optimality tolerance: 1.00e-05\nSPG progress tolerance: 1.00e-07\n Iteration   FunEvals  GradEvals Projections     Step Length           alpha    Function Val        Opt Cond\n         0          0          0          0     0.00000e+00     0.00000e+00     6.43586e+04     1.74158e+03\n         1          2          2          6     1.00000e+00     1.14838e-04     5.16928e+04     1.56670e+03\n         2          3          3         10     1.00000e+00     9.11654e-04     9.55011e+03     4.37705e+02\n         3          4          4         14     1.00000e+00     9.36248e-04     4.28123e+03     3.22887e+02\n         4          5          5         18     1.00000e+00     1.06696e-03     2.38016e+03     1.71788e+02\n         5          6          6         22     1.00000e+00     1.21052e-03     1.53794e+03     1.98450e+02\n         6          7          7         26     1.00000e+00     1.09634e-03     1.08454e+03     1.20651e+02\n         7          8          8         30     1.00000e+00     8.51613e-04     7.68486e+02     1.02098e+02\n         8          9          9         34     1.00000e+00     8.04981e-04     6.06793e+02     6.65342e+01\n         9         10         10         38     1.00000e+00     1.25878e-03     4.57186e+02     5.82597e+01\n        10         11         11         42     1.00000e+00     2.91370e-03     3.51207e+02     9.53526e+01\n        11         13         12         46     3.24310e-01     2.15600e-03     2.27043e+02     3.61941e+01\n        12         14         13         50     1.00000e+00     6.34114e-04     2.02552e+02     3.01056e+01\n        13         15         14         54     1.00000e+00     1.63976e-03     1.61018e+02     2.82961e+01\n        14         16         15         58     1.00000e+00     8.51908e-03     1.11194e+02     6.02229e+01\n        15         18         16         62     1.09690e-01     5.92810e-03     5.58230e+01     1.24917e+01\n        16         19         17         66     1.00000e+00     6.11612e-04     5.03563e+01     9.13537e+00\n        17         20         18         70     1.00000e+00     1.59110e-03     4.36738e+01     8.05800e+00\n        18         21         19         74     1.00000e+00     4.85664e-03     3.31495e+01     1.16047e+01\n        19         23         20         78     1.35093e-01     6.49465e-03     2.90944e+01     9.40102e+00\n        20         24         21         82     1.00000e+00     7.98379e-04     2.72993e+01     5.77931e+00\n        21         25         22         86     1.00000e+00     1.40035e-03     2.50584e+01     6.42402e+00\n        22         26         23         90     1.00000e+00     4.66894e-03     2.41955e+01     2.28105e+01\n        23         28         24         94     2.31175e-01     2.57794e-03     1.80724e+01     4.79904e+00\n        24         29         25         98     1.00000e+00     5.85974e-04     1.74156e+01     4.17424e+00\n        25         30         26        102     1.00000e+00     4.27422e-03     1.37208e+01     4.43414e+00\n        26         32         27        106     1.48690e-01     2.15869e-02     1.24107e+01     6.42103e+00\n        27         34         28        110     2.52438e-01     3.01332e-03     1.12370e+01     4.52461e+00\n        28         35         29        114     1.00000e+00     7.01221e-04     1.07647e+01     3.46244e+00\n        29         36         30        118     1.00000e+00     1.52617e-03     9.99953e+00     3.70082e+00\n        30         37         31        122     1.00000e+00     8.97359e-03     1.06643e+01     1.73156e+01\n        31         39         32        126     1.46551e-01     3.94351e-03     6.28357e+00     2.43527e+00\n        32         40         33        130     1.00000e+00     5.65261e-04     6.03481e+00     2.32069e+00\n        33         41         34        134     1.00000e+00     2.11063e-03     5.49935e+00     2.35977e+00\n        34         42         35        138     1.00000e+00     9.18688e-03     5.45901e+00     1.00254e+01\n        35         44         36        142     1.45842e-01     4.66951e-03     3.79408e+00     2.51679e+00\n        36         45         37        146     1.00000e+00     6.46365e-04     3.50514e+00     1.94783e+00\n        37         46         38        150     1.00000e+00     1.07985e-03     3.33493e+00     1.70397e+00\n        38         47         39        154     1.00000e+00     3.56875e-03     2.94898e+00     2.06227e+00\n        39         49         40        158     1.07987e-01     8.99418e-03     2.81982e+00     2.15922e+00\n        40         50         41        162     1.00000e+00     9.34325e-04     2.71215e+00     1.75633e+00\n        41         51         42        166     1.00000e+00     1.22895e-03     2.59750e+00     2.03036e+00\n        42         52         43        170     1.00000e+00     1.91834e-03     2.50071e+00     2.73450e+00\n        43         53         44        174     1.00000e+00     1.44214e-03     2.53060e+00     4.55847e+00\n        44         54         45        178     1.00000e+00     6.87398e-04     2.24458e+00     1.69277e+00\n        45         55         46        182     1.00000e+00     5.95108e-04     2.18113e+00     1.39991e+00\n        46         56         47        186     1.00000e+00     1.26538e-03     2.08476e+00     1.28360e+00\n        47         57         48        190     1.00000e+00     3.12573e-02     1.13868e+00     7.48942e+00\n        48         60         49        194     2.78684e-02     2.64729e-02     5.88753e-01     1.18377e+00\n        49         61         50        198     1.00000e+00     6.31294e-04     5.31991e-01     5.48474e-01\n        50         62         51        202     1.00000e+00     9.64354e-04     5.07279e-01     7.24977e-01\n        51         63         52        206     1.00000e+00     2.79142e-03     4.65269e-01     7.72654e-01\n        52         65         53        210     2.00245e-01     6.64484e-03     4.49914e-01     8.13937e-01\n        53         66         54        214     1.00000e+00     1.20801e-03     4.36760e-01     1.01442e+00\n        54         67         55        218     1.00000e+00     8.86314e-04     4.20876e-01     7.06753e-01\n        55         68         56        222     1.00000e+00     7.79660e-04     4.09282e-01     6.23354e-01\n        56         69         57        226     1.00000e+00     1.14761e-03     3.96290e-01     5.73528e-01\n        57         70         58        230     1.00000e+00     3.77588e-03     3.75249e-01     1.39934e+00\n        58         72         59        234     2.00884e-01     3.26817e-03     3.49641e-01     5.27126e-01\n        59         73         60        238     1.00000e+00     6.33287e-04     3.42935e-01     5.19730e-01\n        60         74         61        242     1.00000e+00     2.85248e-03     3.16989e-01     4.58775e-01\n        61         76         62        246     1.55660e-01     3.80934e-02     2.89599e-01     1.46763e+00\n        62         78         63        250     1.10876e-01     5.78621e-03     2.64492e-01     4.46932e-01\n        63         79         64        254     1.00000e+00     6.20831e-04     2.59305e-01     4.56014e-01\n        64         80         65        258     1.00000e+00     2.94896e-03     2.39454e-01     3.74111e-01\n        65         82         66        262     2.20546e-01     2.62773e-02     2.19553e-01     1.19150e+00\n        66         84         67        266     1.30750e-01     5.53293e-03     2.02102e-01     4.27416e-01\n        67         85         68        270     1.00000e+00     6.80472e-04     1.96687e-01     4.40527e-01\n        68         86         69        274     1.00000e+00     1.53392e-03     1.88652e-01     3.32734e-01\n        69         87         70        278     1.00000e+00     9.35367e-03     1.77606e-01     1.79186e+00\n        70         89         71        282     1.02542e-01     5.96778e-03     1.44448e-01     3.28094e-01\n        71         90         72        286     1.00000e+00     5.91003e-04     1.40992e-01     3.53038e-01\n        72         91         73        290     1.00000e+00     1.92408e-03     1.33911e-01     2.56879e-01\n        73         92         74        294     1.00000e+00     1.04385e-02     1.16970e-01     9.48452e-01\n        74         94         75        298     1.15285e-01     9.14863e-03     1.00148e-01     3.88615e-01\n        75         95         76        302     1.00000e+00     9.66191e-04     9.58649e-02     3.34602e-01\n        76         96         77        306     1.00000e+00     1.15562e-03     9.29120e-02     2.81519e-01\n        77         97         78        310     1.00000e+00     1.66852e-03     9.00812e-02     4.96070e-01\n        78         98         79        314     1.00000e+00     1.51303e-03     8.96729e-02     5.30551e-01\n        79         99         80        318     1.00000e+00     7.83530e-04     8.42805e-02     3.94196e-01\n        80        100         81        322     1.00000e+00     6.23772e-04     8.21698e-02     1.99996e-01\n        81        101         82        326     1.00000e+00     9.43575e-04     8.01988e-02     2.40000e-01\n        82        102         83        330     1.00000e+00     1.61758e-02     5.71616e-02     6.44812e-01\n        83        105         84        334     3.16824e-02     2.59486e-02     5.09751e-02     3.45698e-01\n        84        106         85        338     1.00000e+00     6.08080e-04     4.93079e-02     1.69315e-01\n        85        107         86        342     1.00000e+00     8.57215e-04     4.81917e-02     1.87468e-01\n        86        108         87        346     1.00000e+00     8.60290e-03     3.92177e-02     3.30372e-01\n        87        110         88        350     1.00000e-01     2.79467e-02     4.56392e-02     9.18815e-01\n        88        111         89        354     1.00000e+00     8.23956e-04     3.78282e-02     4.78190e-01\n        89        112         90        358     1.00000e+00     5.56082e-04     3.46577e-02     1.57008e-01\n        90        113         91        362     1.00000e+00     5.77477e-04     3.41425e-02     1.44116e-01\n        91        114         92        366     1.00000e+00     1.28378e-02     2.45330e-02     1.51747e-01\n        92        116         93        370     1.00000e-01     5.46516e-02     2.62654e-02     5.08009e-01\n        93        118         94        374     3.24711e-01     2.03086e-03     2.15315e-02     1.53104e-01\n        94        119         95        378     1.00000e+00     6.56394e-04     2.07614e-02     1.00206e-01\n        95        120         96        382     1.00000e+00     1.30909e-03     1.99643e-02     1.19791e-01\n        96        121         97        386     1.00000e+00     4.42527e-03     1.83588e-02     2.39983e-01\n        97        123         98        390     1.04091e-01     6.89148e-03     1.75954e-02     1.32551e-01\n        98        124         99        394     1.00000e+00     6.99256e-04     1.72595e-02     8.89980e-02\n        99        125        100        398     1.00000e+00     2.12107e-03     1.64101e-02     1.24349e-01\n       100        127        101        402     1.91372e-01     1.60548e-02     1.57003e-02     2.29814e-01\n       101        129        102        406     2.38220e-01     2.94678e-03     1.49852e-02     1.26915e-01\n       102        130        103        410     1.00000e+00     6.63368e-04     1.47116e-02     8.40596e-02\n       103        131        104        414     1.00000e+00     2.02212e-03     1.40189e-02     1.08352e-01\n       104        133        105        418     2.13794e-01     2.18712e-02     1.31642e-02     2.50550e-01\n       105        135        106        422     1.41080e-01     4.51125e-03     1.23259e-02     1.05294e-01\n       106        136        107        426     1.00000e+00     6.20924e-04     1.21226e-02     7.96526e-02\n       107        137        108        430     1.00000e+00     3.26614e-03     1.12102e-02     9.28441e-02\n       108        139        109        434     1.17696e-01     3.80741e-02     1.05404e-02     2.31788e-01\n       109        141        110        438     1.51042e-01     4.38841e-03     9.92575e-03     9.72055e-02\n       110        142        111        442     1.00000e+00     6.41071e-04     9.74450e-03     6.98994e-02\n       111        143        112        446     1.00000e+00     2.39673e-03     9.20644e-03     8.28658e-02\n       112        145        113        450     2.22182e-01     2.20146e-02     8.63028e-03     2.11028e-01\n       113        147        114        454     1.39467e-01     4.68224e-03     8.08051e-03     8.93397e-02\n       114        148        115        458     1.00000e+00     6.34256e-04     7.93349e-03     6.36165e-02\n       115        149        116        462     1.00000e+00     2.44349e-03     7.49015e-03     7.06335e-02\n       116        151        117        466     2.54950e-01     2.08040e-02     6.99355e-03     1.96979e-01\n       117        153        118        470     1.30965e-01     5.02595e-03     6.52330e-03     8.12207e-02\n       118        154        119        474     1.00000e+00     6.39562e-04     6.39699e-03     5.68647e-02\n       119        155        120        478     1.00000e+00     2.15018e-03     6.08218e-03     6.18824e-02\n       120        157        121        482     3.81302e-01     1.64075e-02     5.63677e-03     1.86951e-01\n       121        159        122        486     1.12405e-01     5.72180e-03     5.18889e-03     7.25360e-02\n       122        160        123        490     1.00000e+00     6.28822e-04     5.08574e-03     5.10345e-02\n       123        161        124        494     1.00000e+00     2.09091e-03     4.84328e-03     5.10654e-02\n       124        162        125        498     1.00000e+00     1.49127e-02     4.95518e-03     3.19092e-01\n       125        164        126        502     1.00000e-01     7.02326e-03     3.48282e-03     9.38520e-02\n       126        165        127        506     1.00000e+00     6.11246e-04     3.28122e-03     4.20319e-02\n       127        166        128        510     1.00000e+00     9.00684e-04     3.18446e-03     4.07260e-02\n       128        167        129        514     1.00000e+00     2.99236e-03     2.97272e-03     4.04108e-02\n       129        169        130        518     1.99761e-01     1.51574e-02     2.85064e-03     9.12819e-02\n       130        171        131        522     2.61380e-01     2.84341e-03     2.73003e-03     4.74350e-02\n       131        172        132        526     1.00000e+00     6.96021e-04     2.67897e-03     3.95732e-02\n       132        173        133        530     1.00000e+00     1.68761e-03     2.57989e-03     3.69408e-02\n       133        175        134        534     3.37065e-01     1.43071e-02     2.43289e-03     1.10250e-01\n       134        177        135        538     1.41059e-01     4.50086e-03     2.27779e-03     3.60251e-02\n       135        178        136        542     1.00000e+00     6.19790e-04     2.24287e-03     3.39566e-02\n       136        179        137        546     1.00000e+00     3.44626e-03     2.07536e-03     3.16146e-02\n       137        181        138        550     1.01888e-01     4.49385e-02     1.95620e-03     9.37649e-02\n       138        183        139        554     1.46707e-01     4.50337e-03     1.84551e-03     3.48796e-02\n       139        184        140        558     1.00000e+00     6.38116e-04     1.81479e-03     3.13642e-02\n       140        185        141        562     1.00000e+00     2.56214e-03     1.71406e-03     2.84151e-02\n       141        187        142        566     1.80796e-01     2.59253e-02     1.61527e-03     8.90130e-02\n       142        189        143        570     1.46007e-01     4.53963e-03     1.52159e-03     3.21633e-02\n       143        190        144        574     1.00000e+00     6.38811e-04     1.49573e-03     2.85293e-02\n       144        191        145        578     1.00000e+00     2.42806e-03     1.41727e-03     2.53309e-02\n       145        193        146        582     2.17186e-01     2.26229e-02     1.33315e-03     8.37420e-02\n       146        195        147        586     1.40569e-01     4.71374e-03     1.25282e-03     2.93042e-02\n       147        196        148        590     1.00000e+00     6.38375e-04     1.23112e-03     2.56410e-02\n       148        197        149        594     1.00000e+00     2.34300e-03     1.16895e-03     2.27124e-02\n       149        199        150        598     2.54560e-01     1.99862e-02     1.09831e-03     7.67894e-02\n       150        201        151        602     1.37898e-01     4.82629e-03     1.03025e-03     2.67566e-02\n       151        202        152        606     1.00000e+00     6.40271e-04     1.01187e-03     2.31600e-02\n       152        203        153        610     1.00000e+00     2.20297e-03     9.63819e-04     2.02366e-02\n       153        205        154        614     3.11264e-01     1.74953e-02     9.03234e-04     7.13382e-02\n       154        207        155        618     1.30045e-01     5.08196e-03     8.43516e-04     2.40218e-02\n       155        208        156        622     1.00000e+00     6.36926e-04     8.28144e-04     2.08700e-02\n       156        209        157        626     1.00000e+00     2.14805e-03     7.89800e-04     1.76924e-02\n       157        211        158        630     3.70495e-01     1.59062e-02     7.37685e-04     6.60600e-02\n       158        213        159        634     1.22799e-01     5.39672e-03     6.85385e-04     2.23752e-02\n       159        214        160        638     1.00000e+00     6.39120e-04     6.72098e-04     1.88245e-02\n       160        215        161        642     1.00000e+00     1.94951e-03     6.43679e-04     1.52568e-02\n       161        216        162        646     1.00000e+00     1.34593e-02     6.60728e-04     1.19667e-01\n       162        218        163        650     1.00000e-01     6.22211e-03     4.83046e-04     2.58516e-02\n       163        219        164        654     1.00000e+00     5.89579e-04     4.61773e-04     1.79245e-02\n       164        220        165        658     1.00000e+00     1.24674e-03     4.45398e-04     1.21365e-02\n       165        221        166        662     1.00000e+00     3.02114e-03     4.18316e-04     1.82795e-02\n       166        223        167        666     1.56689e-01     1.09027e-02     4.06209e-04     2.48219e-02\n       167        224        168        670     1.00000e+00     1.60717e-03     4.03637e-04     3.77136e-02\n       168        225        169        674     1.00000e+00     8.55705e-04     3.84736e-04     2.46285e-02\n       169        226        170        678     1.00000e+00     6.39361e-04     3.74966e-04     1.48661e-02\n       170        227        171        682     1.00000e+00     8.24889e-04     3.68213e-04     1.15919e-02\n       171        228        172        686     1.00000e+00     1.02920e-02     2.99248e-04     2.85499e-02\n       172        231        173        690     3.98923e-02     3.06388e-02     2.91577e-04     2.66898e-02\n       173        232        174        694     1.00000e+00     7.19203e-04     2.80528e-04     1.43093e-02\n       174        233        175        698     1.00000e+00     6.98499e-04     2.75673e-04     1.03118e-02\n       175        234        176        702     1.00000e+00     2.02359e-03     2.64012e-04     1.37560e-02\n       176        236        177        706     2.19335e-01     1.64022e-02     2.52442e-04     2.84481e-02\n       177        238        178        710     1.95547e-01     3.43519e-03     2.40661e-04     1.36585e-02\n       178        239        179        714     1.00000e+00     6.47704e-04     2.36916e-04     9.50043e-03\n       179        240        180        718     1.00000e+00     2.48786e-03     2.24573e-04     1.18934e-02\n       180        242        181        722     1.52068e-01     3.45029e-02     2.10746e-04     3.12955e-02\n       181        244        182        726     1.21951e-01     5.13687e-03     1.97529e-04     1.16588e-02\n       182        245        183        730     1.00000e+00     6.16235e-04     1.94671e-04     8.85038e-03\n       183        246        184        734     1.00000e+00     3.66105e-03     1.79817e-04     1.01547e-02\n       184        248        185        738     1.12626e-01     4.98514e-02     1.67959e-04     2.99766e-02\n       185        250        186        742     1.14981e-01     5.51092e-03     1.57084e-04     1.07548e-02\n       186        251        187        746     1.00000e+00     6.22669e-04     1.54643e-04     7.88595e-03\n       187        252        188        750     1.00000e+00     2.90795e-03     1.45251e-04     8.88077e-03\n       188        254        189        754     2.06668e-01     2.98051e-02     1.34978e-04     2.63712e-02\n       189        256        190        758     1.09154e-01     5.93661e-03     1.25592e-04     1.02315e-02\n       190        257        191        762     1.00000e+00     6.35426e-04     1.23350e-04     7.10132e-03\n       191        258        192        766     1.00000e+00     2.10923e-03     1.17856e-04     7.87428e-03\n       192        259        193        770     1.00000e+00     1.54463e-02     1.22851e-04     4.91207e-02\n       193        261        194        774     1.00000e-01     6.91379e-03     8.57157e-05     1.24458e-02\n       194        262        195        778     1.00000e+00     5.97581e-04     8.10100e-05     6.08195e-03\n       195        263        196        782     1.00000e+00     8.82323e-04     7.87873e-05     6.21306e-03\n       196        264        197        786     1.00000e+00     2.81259e-03     7.41525e-05     5.85756e-03\n       197        266        198        790     2.80248e-01     1.62852e-02     7.02357e-05     1.53048e-02\n       198        268        199        794     1.64326e-01     4.20594e-03     6.62986e-05     6.09616e-03\n       199        269        200        798     1.00000e+00     6.68458e-04     6.51450e-05     5.77133e-03\n       200        270        201        802     1.00000e+00     2.02537e-03     6.23930e-05     5.16853e-03","category":"page"},{"location":"tutorials/02_simple_constrained/","page":"Constrained Inversion, basics","title":"Constrained Inversion, basics","text":"solpqn = pqn(f, g!, fg!, zeros(n), proj, pqnopt);","category":"page"},{"location":"tutorials/02_simple_constrained/","page":"Constrained Inversion, basics","title":"Constrained Inversion, basics","text":"Running PQN...\nNumber of L-BFGS Corrections to store: 10\nSpectral initialization of SPG: 1\nMaximum number of SPG iterations: 10\nSPG optimality tolerance: 1.00e-06\nSPG progress tolerance: 1.00e-07\nPQN optimality tolerance: 1.00e-05\nPQN progress tolerance: 1.00e-07\nQuadratic initialization of line search: 0\nMaximum number of iterations: 200\n Iteration   FunEvals  GradEvals Projections     Step Length    Function Val        Opt Cond\n         0          0          0          0     0.00000e+00     6.43586e+04     1.74158e+03\n         1          5          2          6     1.00000e-03     1.12088e+04     5.00193e+02\n         2          6          3         37     1.00000e+00     4.54231e+03     2.98662e+02\n         3          7          4         70     1.00000e+00     2.06001e+03     1.57737e+02\n         4          8          5        103     1.00000e+00     9.82998e+02     1.00808e+02\n         5          9          6        136     1.00000e+00     4.56067e+02     8.50505e+01\n         6         10          7        169     1.00000e+00     2.67616e+02     4.15506e+01\n         7         11          8        202     1.00000e+00     1.92744e+02     2.88074e+01\n         8         12          9        235     1.00000e+00     1.16305e+02     2.57625e+01\n         9         13         10        268     1.00000e+00     7.96665e+01     2.83135e+01\n        10         14         11        301     1.00000e+00     5.14106e+01     1.72586e+01\n        11         15         12        334     1.00000e+00     3.73887e+01     8.92290e+00\n        12         16         13        367     1.00000e+00     2.69002e+01     8.94057e+00\n        13         17         14        400     1.00000e+00     1.92797e+01     7.48904e+00\n        14         18         15        433     1.00000e+00     1.43536e+01     8.37061e+00\n        15         19         16        466     1.00000e+00     1.11029e+01     5.80731e+00\n        16         20         17        499     1.00000e+00     7.85271e+00     4.72716e+00\n        17         21         18        532     1.00000e+00     5.82694e+00     6.00975e+00\n        18         22         19        565     1.00000e+00     4.39628e+00     2.82803e+00\n        19         23         20        598     1.00000e+00     3.56750e+00     2.83429e+00\n        20         24         21        631     1.00000e+00     2.82282e+00     2.23547e+00\n        21         25         22        664     1.00000e+00     2.25303e+00     3.10365e+00\n        22         26         23        697     1.00000e+00     1.87255e+00     1.85390e+00\n        23         27         24        730     1.00000e+00     1.46381e+00     1.92033e+00\n        24         28         25        763     1.00000e+00     1.01555e+00     1.69584e+00\n        25         29         26        796     1.00000e+00     7.65100e-01     3.03526e+00\n        26         30         27        829     1.00000e+00     6.06219e-01     1.17198e+00\n        27         31         28        862     1.00000e+00     5.16868e-01     8.92980e-01\n        28         32         29        895     1.00000e+00     3.72158e-01     8.62956e-01\n        29         33         30        928     1.00000e+00     2.64318e-01     1.26354e+00\n        30         34         31        961     1.00000e+00     1.94658e-01     9.38447e-01\n        31         35         32        994     1.00000e+00     1.60645e-01     6.20065e-01\n        32         36         33       1027     1.00000e+00     1.24285e-01     6.56607e-01\n        33         37         34       1060     1.00000e+00     9.68606e-02     6.86179e-01\n        34         38         35       1093     1.00000e+00     7.48079e-02     4.35798e-01\n        35         39         36       1126     1.00000e+00     5.81404e-02     4.22953e-01\n        36         40         37       1159     1.00000e+00     4.51947e-02     6.83740e-01\n        37         41         38       1192     1.00000e+00     3.48079e-02     3.15936e-01\n        38         42         39       1225     1.00000e+00     2.82198e-02     2.54875e-01\n        39         43         40       1258     1.00000e+00     2.21134e-02     2.37847e-01\n        40         44         41       1291     1.00000e+00     1.61920e-02     2.48766e-01\n        41         45         42       1324     1.00000e+00     1.22617e-02     1.87633e-01\n        42         46         43       1357     1.00000e+00     9.77544e-03     1.44600e-01\n        43         47         44       1390     1.00000e+00     6.78058e-03     1.25214e-01\n        44         48         45       1423     1.00000e+00     5.08399e-03     1.49467e-01\n        45         49         46       1456     1.00000e+00     3.96789e-03     1.03778e-01\n        46         50         47       1489     1.00000e+00     2.80505e-03     8.96870e-02\n        47         51         48       1522     1.00000e+00     1.98806e-03     1.16806e-01\n        48         52         49       1555     1.00000e+00     1.33502e-03     7.85245e-02\n        49         53         50       1588     1.00000e+00     9.52237e-04     5.22027e-02\n        50         54         51       1621     1.00000e+00     7.38365e-04     3.78488e-02\n        51         55         52       1654     1.00000e+00     5.64995e-04     6.53816e-02\n        52         56         53       1687     1.00000e+00     4.73456e-04     3.35096e-02\n        53         57         54       1720     1.00000e+00     3.84913e-04     2.58599e-02\n        54         58         55       1753     1.00000e+00     2.79461e-04     2.18399e-02\n        55         59         56       1786     1.00000e+00     1.68513e-04     2.76946e-02\n        56         60         57       1819     1.00000e+00     1.28404e-04     4.22637e-02\n        57         61         58       1852     1.00000e+00     9.60111e-05     2.10306e-02\n        58         62         59       1879     1.00000e+00     7.80537e-05     1.26640e-02\n        59         63         60       1900     1.00000e+00     6.08178e-05     1.03112e-02\n        60         64         61       1933     1.00000e+00     4.02213e-05     1.23837e-02\n        61         65         62       1966     1.00000e+00     2.85879e-05     1.35953e-02\n        62         66         63       1999     1.00000e+00     2.13626e-05     7.39491e-03\n        63         67         64       2027     1.00000e+00     1.56684e-05     6.16891e-03\n        64         68         65       2060     1.00000e+00     9.99324e-06     7.54116e-03\n        65         69         66       2093     1.00000e+00     6.96419e-06     8.23401e-03\n        66         70         67       2111     1.00000e+00     5.60443e-06     3.71143e-03\n        67         71         68       2124     1.00000e+00     4.71354e-06     3.86080e-03\n        68         72         69       2137     1.00000e+00     3.90985e-06     3.13338e-03\n        69         73         70       2158     1.00000e+00     2.85638e-06     4.16902e-03\n        70         74         71       2173     1.00000e+00     2.28482e-06     2.81712e-03\n        71         75         72       2186     1.00000e+00     1.84743e-06     1.91517e-03\n        72         76         73       2205     1.00000e+00     1.26905e-06     2.37160e-03\n        73         77         74       2223     1.00000e+00     9.38620e-07     3.14916e-03\n        74         78         75       2241     1.00000e+00     7.30946e-07     9.59953e-04\n        75         79         76       2251     1.00000e+00     6.29565e-07     8.13586e-04\n        76         80         77       2263     1.00000e+00     4.40387e-07     1.09972e-03\nFunction value changing by less than progTol","category":"page"},{"location":"tutorials/02_simple_constrained/#Plot-solutions","page":"Constrained Inversion, basics","title":"Plot solutions","text":"","category":"section"},{"location":"tutorials/02_simple_constrained/","page":"Constrained Inversion, basics","title":"Constrained Inversion, basics","text":"figure(figsize=(12, 4))\nsubplot(131)\nplot(x_true, label=\"true\", \"ro\", markersize=5)\nplot(solspg.x, label=\"spg\", \"g*\", markersize=2)\nlegend()\nsubplot(132)\nplot(x_true, label=\"true\", \"ro\", markersize=5)\nplot(solpqn.x, label=\"pqn\", \"g^\", markersize=1)\nlegend()\nsubplot(133)\nplot(x_true - solspg.x, label=\"spg error\", \"r\", markersize=5)\nplot(x_true - solpqn.x, label=\"pqn error\", \"g\", markersize=1)\nlegend()\ntight_layout()","category":"page"},{"location":"tutorials/02_simple_constrained/","page":"Constrained Inversion, basics","title":"Constrained Inversion, basics","text":"(Image: png)","category":"page"},{"location":"tutorials/02_simple_constrained/","page":"Constrained Inversion, basics","title":"Constrained Inversion, basics","text":"loglog(solspg.Ï_trace, label=\"spg\")\nloglog(solpqn.Ï_trace, label=\"pqn\")\nlegend()","category":"page"},{"location":"tutorials/02_simple_constrained/","page":"Constrained Inversion, basics","title":"Constrained Inversion, basics","text":"(Image: png)","category":"page"},{"location":"tutorials/02_simple_constrained/","page":"Constrained Inversion, basics","title":"Constrained Inversion, basics","text":"PyObject <matplotlib.legend.Legend object at 0x14372af40>","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#Note-on-runtime","page":"-","title":"Note on runtime","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"Warning: this notebook takes more than 1 hour to run for 16 shots with two workers on an Intel 8168.","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"lscpu CPU information: Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"using SlimOptim\nusing Distributed, JUDI.TimeModeling, LinearAlgebra, PyPlot, SetIntersectionProjection, Printf","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"â Info: Precompiling SetIntersectionProjection [335f7d24-6316-57dd-9c3a-df470f2b739e]\nâ @ Base loading.jl:1278","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#.-Prepare-models","page":"-","title":"1. Prepare models","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"n = (251, 251) # nx, nz\nd = (15., 15.) # hx, hz\no = (0., 0.); # ox, oz","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"# Squared slowness\nm = 1.5f0^(-2) * ones(Float32, n)\nm[101:150, 101:150] .= 1.7f0^(-2)\nm0 = 1/1.5^2 * ones(Float32, n);","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"model = Model(n,d,o,m)\nmodel0 = Model(n,d,o,m0);","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#Visualize","page":"-","title":"Visualize","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"figure(figsize=(8,9))\nvmin,vmax = extrema(m)\ndmin,dmax = -.1,.1\n\nsubplot(3,1,1); imshow(m,aspect=\"auto\",cmap=\"jet\"); \ncolorbar(); clim(vmin,vmax); title(\"True squared slowness (m)\")\n\nsubplot(3,1,2); imshow(m0,aspect=\"auto\",cmap=\"jet\");\ncolorbar(); clim(vmin,vmax); title(\"Initial squared slowness (m0)\");\n\nsubplot(3,1,3); imshow(m.-m0,aspect=\"auto\",cmap=\"seismic\");\ncolorbar(); clim(dmin,dmax); title(\"Difference (m-m0)\");\n\ntight_layout()","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"(Image: png)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#.-Setup-Constraints-with-[SetIntersectionProjection](https://github.com/slimgroup/SetIntersectionProjection.jl)","page":"-","title":"2. Setup Constraints with SetIntersectionProjection","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"options=PARSDMM_options()\noptions.FL=Float32\noptions=default_PARSDMM_options(options,options.FL)\nconstraint = Vector{SetIntersectionProjection.set_definitions}()\nconstraint2 = Vector{SetIntersectionProjection.set_definitions}()","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"set_definitions[]","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"We setup two constaints:","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"Bounds that limit maximum and minimum velocity\nTV, that limits variation and force a piece-wise constant structure","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"#bounds:\nm_min = 0 .* m .+ minimum(m).*.5\nm_max = 0 .* m .+ maximum(m)\nset_type = \"bounds\"\nTD_OP = \"identity\"\napp_mode = (\"matrix\",\"\")\ncustom_TD_OP = ([],false)\npush!(constraint, set_definitions(set_type,TD_OP,vec(m_min),vec(m_max),app_mode,custom_TD_OP));\npush!(constraint2, set_definitions(set_type,TD_OP,vec(m_min),vec(m_max),app_mode,custom_TD_OP));","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"#TV\n(TV,dummy1,dummy2,dummy3) = get_TD_operator(model0,\"TV\",options.FL)\nm_min = 0.0\nm_max = norm(TV*vec(m),1) * .5\nset_type = \"l1\"\nTD_OP = \"TV\"\napp_mode = (\"matrix\",\"\")\ncustom_TD_OP = ([],false)\npush!(constraint, set_definitions(set_type,TD_OP,m_min,m_max,app_mode,custom_TD_OP));","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"#set up constraints with bounds only, precompute some things and define projector\n(P_sub2,TD_OP2,set_Prop2) = setup_constraints(constraint2, model0,options.FL)\n(TD_OP2,AtA2,l2,y2) = PARSDMM_precompute_distribute(TD_OP2,set_Prop2,model0,options)\noptions2 = deepcopy(options)\noptions2.rho_ini = ones(length(TD_OP2))*10.0\n\nproj_intersection2 = x-> PARSDMM(x, AtA2, TD_OP2, set_Prop2, P_sub2, model0, options2)  \n\n# Projection function\nfunction prj2(input)\n    input = Float32.(input)\n    (x,dummy1,dummy2,dymmy3) = proj_intersection2(vec(input))\n    return x\nend","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"prj2 (generic function with 1 method)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"#set up constraints with bounds and TV\n(P_sub,TD_OP,set_Prop) = setup_constraints(constraint, model0,options.FL)\n(TD_OP,AtA,l,y) = PARSDMM_precompute_distribute(TD_OP,set_Prop,model0,options)\noptions.rho_ini = ones(length(TD_OP))*10.0\n\nproj_intersection = x-> PARSDMM(x, AtA, TD_OP, set_Prop, P_sub, model0, options)\n\n# Projection function\nfunction prj(input)\n    input = Float32.(input)\n    (x,dummy1,dummy2,dymmy3) = proj_intersection(vec(input))\n    return x\nend","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"prj (generic function with 1 method)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#.-Build-a-small-local-compute-cluster-(2-workers)","page":"-","title":"3. Build a small local compute cluster (2 workers)","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/#Setup-OMP-environment-variables-for-the-cluster","page":"-","title":"Setup OMP environment variables for the cluster","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"In the distributed compute case the workers that we add would be on different hardware, and we might add tens of workers in 2D and hundreds in 3D. Here we run on a single machine with only 2 workers, and so we need to be careful with details related to high performance computing. If we did not specify thread affinity, the two workers would compete for the same physical cores and the modeling would be incredibly slow.","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"We spin up the small 2-worker cluster by calling addprocs(2), and because we set the environment variable ENV[\"OMP_DISPLAY_ENV\"] = \"true\" we will see the OMP environment printed out on each worker. In that output (below) we can verify that half of the total threads (44/2 = 22) are assigned to each socket on this 2 socket system. You can obtain more details about the hardware with the shell command lscpu.","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"We set four environment variables related to OpenMP:","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"OMP_DISPLAY_ENV prints out the OpenMP environment on each worker\nOMP_PROC_BIND specifies that threads should be bound to physical cores\nOMP_NUM_THREADS specifies the number of threads per workers is 1/2 the number of physical cores\nGOMP_CPU_AFFINITY specifies which physical cores the threads run on for each worker","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"If you run the shell command top during execution, you will see 3 julia processes: the main process and two workers. The two workers should generally have about 50% of the system, and load average should tend towards the physical number of cores.","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"nthread = Sys.CPU_THREADS\nnw = 2\n\nENV[\"OMP_DISPLAY_ENV\"] = \"true\"\nENV[\"OMP_PROC_BIND\"] = \"close\"\nENV[\"OMP_NUM_THREADS\"] = \"$(div(nthread, nw))\" \naddprocs(nw)\n@show workers()\nfor k in 1:nworkers()\n    place1 = (k - 1) * div(nthread,nworkers())\n    place2 = (k + 0) * div(nthread,nworkers()) - 1\n    @show place1, place2, div(nthread, nw)\n    @spawnat workers()[k] ENV[\"GOMP_CPU_AFFINITY\"] = \"$(place1)-$(place2)\";\nend","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"workers() = [2, 3]\n(place1, place2, div(nthread, nw)) = (0, 3, 4)\n(place1, place2, div(nthread, nw)) = (4, 7, 4)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"@everywhere using Distributed, JUDI.TimeModeling, JUDI.SLIM_optim, LinearAlgebra, PyPlot, SetIntersectionProjection","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"      From worker 2:\t\n      From worker 2:\tOPENMP DISPLAY ENVIRONMENT BEGIN\n      From worker 2:\t  _OPENMP = '201511'\n      From worker 2:\t  OMP_DYNAMIC = 'FALSE'\n      From worker 2:\t  OMP_NESTED = 'FALSE'\n      From worker 2:\t  OMP_NUM_THREADS = '4'\n      From worker 2:\t  OMP_SCHEDULE = 'DYNAMIC'\n      From worker 2:\t  OMP_PROC_BIND = 'CLOSE'\n      From worker 2:\t  OMP_PLACES = '{0},{1},{2},{3}'\n      From worker 2:\t  OMP_STACKSIZE = '0'\n      From worker 2:\t  OMP_WAIT_POLICY = 'PASSIVE'\n      From worker 2:\t  OMP_THREAD_LIMIT = '4294967295'\n      From worker 2:\t  OMP_MAX_ACTIVE_LEVELS = '2147483647'\n      From worker 2:\t  OMP_CANCELLATION = 'FALSE'\n      From worker 2:\t  OMP_DEFAULT_DEVICE = '0'\n      From worker 2:\t  OMP_MAX_TASK_PRIORITY = '0'\n      From worker 2:\t  OMP_DISPLAY_AFFINITY = 'FALSE'\n      From worker 2:\t  OMP_AFFINITY_FORMAT = 'level %L thread %i affinity %A'\n      From worker 2:\tOPENMP DISPLAY ENVIRONMENT END\n      From worker 3:\t\n      From worker 3:\tOPENMP DISPLAY ENVIRONMENT BEGIN\n      From worker 3:\t  _OPENMP = '201511'\n      From worker 3:\t  OMP_DYNAMIC = 'FALSE'\n      From worker 3:\t  OMP_NESTED = 'FALSE'\n      From worker 3:\t  OMP_NUM_THREADS = '4'\n      From worker 3:\t  OMP_SCHEDULE = 'DYNAMIC'\n      From worker 3:\t  OMP_PROC_BIND = 'CLOSE'\n      From worker 3:\t  OMP_PLACES = '{4},{5},{6},{7}'\n      From worker 3:\t  OMP_STACKSIZE = '0'\n      From worker 3:\t  OMP_WAIT_POLICY = 'PASSIVE'\n      From worker 3:\t  OMP_THREAD_LIMIT = '4294967295'\n      From worker 3:\t  OMP_MAX_ACTIVE_LEVELS = '2147483647'\n      From worker 3:\t  OMP_CANCELLATION = 'FALSE'\n      From worker 3:\t  OMP_DEFAULT_DEVICE = '0'\n      From worker 3:\t  OMP_MAX_TASK_PRIORITY = '0'\n      From worker 3:\t  OMP_DISPLAY_AFFINITY = 'FALSE'\n      From worker 3:\t  OMP_AFFINITY_FORMAT = 'level %L thread %i affinity %A'\n      From worker 3:\tOPENMP DISPLAY ENVIRONMENT END\n      From worker 2:\t\n      From worker 2:\tOPENMP DISPLAY ENVIRONMENT BEGIN\n      From worker 2:\t  _OPENMP = '201511'\n      From worker 2:\t  OMP_DYNAMIC = 'FALSE'\n      From worker 2:\t  OMP_NESTED = 'FALSE'\n      From worker 2:\t  OMP_NUM_THREADS = '4'\n      From worker 2:\t  OMP_SCHEDULE = 'DYNAMIC'\n      From worker 2:\t  OMP_PROC_BIND = 'CLOSE'\n      From worker 2:\t  OMP_PLACES = '{0},{1},{2},{3}'\n      From worker 2:\t  OMP_STACKSIZE = '0'\n      From worker 2:\t  OMP_WAIT_POLICY = 'PASSIVE'\n      From worker 2:\t  OMP_THREAD_LIMIT = '4294967295'\n      From worker 2:\t  OMP_MAX_ACTIVE_LEVELS = '2147483647'\n      From worker 2:\t  OMP_CANCELLATION = 'FALSE'\n      From worker 2:\t  OMP_DEFAULT_DEVICE = '0'\n      From worker 2:\t  OMP_MAX_TASK_PRIORITY = '0'\n      From worker 2:\t  OMP_DISPLAY_AFFINITY = 'FALSE'\n      From worker 2:\t  OMP_AFFINITY_FORMAT = 'level %L thread %i affinity %A'\n      From worker 2:\tOPENMP DISPLAY ENVIRONMENT END\n      From worker 3:\t\n      From worker 3:\tOPENMP DISPLAY ENVIRONMENT BEGIN\n      From worker 3:\t  _OPENMP = '201511'\n      From worker 3:\t  OMP_DYNAMIC = 'FALSE'\n      From worker 3:\t  OMP_NESTED = 'FALSE'\n      From worker 3:\t  OMP_NUM_THREADS = '4'\n      From worker 3:\t  OMP_SCHEDULE = 'DYNAMIC'\n      From worker 3:\t  OMP_PROC_BIND = 'CLOSE'\n      From worker 3:\t  OMP_PLACES = '{4},{5},{6},{7}'\n      From worker 3:\t  OMP_STACKSIZE = '0'\n      From worker 3:\t  OMP_WAIT_POLICY = 'PASSIVE'\n      From worker 3:\t  OMP_THREAD_LIMIT = '4294967295'\n      From worker 3:\t  OMP_MAX_ACTIVE_LEVELS = '2147483647'\n      From worker 3:\t  OMP_CANCELLATION = 'FALSE'\n      From worker 3:\t  OMP_DEFAULT_DEVICE = '0'\n      From worker 3:\t  OMP_MAX_TASK_PRIORITY = '0'\n      From worker 3:\t  OMP_DISPLAY_AFFINITY = 'FALSE'\n      From worker 3:\t  OMP_AFFINITY_FORMAT = 'level %L thread %i affinity %A'\n      From worker 3:\tOPENMP DISPLAY ENVIRONMENT END","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#.-Create-source-and-receivers-geometries","page":"-","title":"4. Create source and receivers geometries","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"We use 8 shot locations evenly distributed across the left of the model.","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"tn = 3500  # Recording time in ms\ndt = 2f0  # Shot record sampling rate in ms\nf0 = 0.005 # Peak frquency in kHz","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"0.005","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"nsrc = 8\nxsrc = convertToCell(d[1].*ones(Float32, nsrc))\nysrc = convertToCell(range(0f0, stop = 0f0, length = nsrc))\nzsrc = convertToCell(range(0f0, (n[2] - 1)*d[2], length=nsrc))\nsrc_geom = Geometry(xsrc, ysrc, zsrc; dt=dt, t=tn);","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"nrec = 251\nxrec = (n[1] - 2)*d[1] .* ones(Float32, nrec)\nyrec = 0f0\nzrec = convertToCell(range(0f0, (n[2] - 1)*d[2], length=nrec))\nrec_geom = Geometry(xrec, yrec, zrec; dt=dt, t=tn, nsrc=nsrc);","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#Visualize-geometry","page":"-","title":"Visualize geometry","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"figure()\nvmin,vmax = extrema(m)\ndmin,dmax = -.1,.1\n\nimshow(m,aspect=\"auto\",cmap=\"jet\", extent=[0, 3750, 3750, 0]); \ncolorbar(); clim(vmin,vmax); title(\"True squared slowness (m)\")\nscatter(xsrc, zsrc, c=\"g\", label=\"Sources\")\nscatter(xrec[1:4:end], zrec[1:4:end], c=\"c\", label=\"Receiver\")\nlegend()","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"(Image: png)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"PyObject <matplotlib.legend.Legend object at 0x7f90626162b0>","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#.-Build-F,-the-JUDI-modeling-operator","page":"-","title":"5. Build F, the JUDI modeling operator","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"# True model operator\nntComp = get_computational_nt(src_geom, rec_geom, model)\ninfo = Info(prod(n), nsrc, ntComp)\nF = judiModeling(info, model, src_geom, rec_geom)\n\n# Intial model operator\nntComp = get_computational_nt(src_geom, rec_geom, model0)\ninfo = Info(prod(n), nsrc,ntComp)\nF0 = judiModeling(info, model0, src_geom, rec_geom);","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"# Source function\nfsrc = judiVector(src_geom, ricker_wavelet(tn, dt, f0));","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#.-Use-F-to-create-the-data-in-both-models","page":"-","title":"6. Use F to create the data in both models","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"t1 = @elapsed begin\n    dobs = F*fsrc;\nend\n@info @sprintf(\"Time in true model; %.2f seconds\\n\", t1);\n\nt2 = @elapsed begin\n    d0 = F0*fsrc;\nend\n@info @sprintf(\"Time in init model; %.2f seconds\\n\", t2);","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"â Info: Time in true model; 17.57 seconds\nâ @ Main In[20]:4\nâ Info: Time in init model; 6.78 seconds\nâ @ Main In[20]:9","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#Compute-the-residual-data","page":"-","title":"Compute the residual data","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"r = d0 - dobs;","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#.-Visualize-data","page":"-","title":"7. Visualize data","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"shots = [1,4,8]","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"3-element Array{Int64,1}:\n 1\n 4\n 8","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#Plot-shot-gathers-for-true-model,-initial-model,-and-residual","page":"-","title":"Plot shot gathers for true model, initial model, and residual","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"The table below describes the data images below. We flip the direction of the residual and modeled data in order to help display the match with the true data.","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"<table style=\"border:1px solid black;\" width=\"60%\"> <tr>   <td style=\"border:1px solid black; text-align:center;\" bgcolor=\"white\">       <b>Initial Residual Data<br>(flipped)</b></td>   <td style=\"border:1px solid black; text-align:center;\" bgcolor=\"white\">       <b>True Data</b></td>   <td style=\"border:1px solid black; text-align:center;\" bgcolor=\"white\">       <b>Initial Data<br>(flipped)</b></td> </tr> </table>","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"Note that the data modeled in the initial model lacks a lot of reflectivity that is evident in the data modeled in the true model. We expect to recover this missing reflectivity with the FWI.","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"scale = 10.0 / sqrt(norm(dobs)^2 / length(dobs.data))\n@show scale\n\nnzero = 5\npad = ones(Float32,1751,nzero)\n\nfigure(figsize=(8,9)); clf()\nfor (iplot,ishot) in enumerate(shots)\n    cat2 = hcat(reverse(r.data[ishot],dims=2), pad, dobs.data[ishot], pad, reverse(d0.data[ishot],dims=2))\n    subplot(3,1,iplot);\n    imshow(cat2,cmap=\"gray\",aspect=\"auto\",clim=[-1,+1]);\n    title(\" Initial Residual sz=$(zsrc[ishot])   |   True sz=$(zsrc[ishot])   |   Initial sz=$(zsrc[ishot]) (flipped)\");\nend\ntight_layout()","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"(Image: png)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"scale = 0.01818860621034772","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#.-Assess-if-data-is-cycle-skipped-at-the-farthest-offsets","page":"-","title":"8. Assess if data is cycle skipped at the farthest offsets","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"Next we plot the far offset traces for these three shots in order to assess if the data is cycle skipped. ","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"You can ovbserve in the plots below that the refraction waveforms (first arrivals) in the initial model are not cycle skipped with respect to the true model, so we can proceed. ","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"A very significant part of the residual wavefield is actually reflections in this example.","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"scale = 10.0 / sqrt(norm(dobs)^2 / length(dobs.data))\nt = [0.0:dt:tn;]\n\nfigure(figsize=(8,9)); clf()\nfor (iplot,ishot) in enumerate(shots)\n    subplot(3,1,iplot);\n    plot(t,dobs.data[ishot][:,end],label=\"True Model $(ishot) at z=$(zsrc[ishot])\");\n    plot(t,d0.data[ishot][:,end],label=\"Initial Model $(ishot) at z=$(zsrc[ishot])\");\n    xlim([4.5,t[end]])\n    legend()\nend\ntight_layout()","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"(Image: png)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#.-Build-the-objective-functions","page":"-","title":"9. Build the objective functions","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/#Build-src/rec-positions-mask","page":"-","title":"Build src/rec positions mask","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"We use this mask to remove the imprint in gradients of proximity to source locations. The mask is set to 0 wherever a source or receiver is close, and is set to 1 otherwise. Without this mask most of the gradient updates would be concentrated close to sources where the model is correct. ","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"wb_mask = ones(Float32,size(m))\nwb_mask[1:5, :] .= 0;\nwb_mask[end-5:end, :] .= 0;\n\nfigure(figsize=(8,3))\nimshow(wb_mask', aspect=\"auto\",cmap=\"gray_r\",clim=[0,+2]);\ncolorbar();\ntitle(\"Water Bottom Mask\");\ntight_layout()","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"(Image: png)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#Build-the-objective-function","page":"-","title":"Build the objective function","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"This method is called by the solver whenever the gradient is required. Steps in computing the gradient are as follows:","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"Apply the adjoint of the Jacobian to the current residual J' * [F*v - d] \nApply simple scaling based on the size of the first gradient, and save to apply to future gradients","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"# build Jacoian\nJ = judiJacobian(F0, fsrc)\n\nfunction objective(F0, G, m, dobs, wb_mask)\n    F0.model.m .= m\n    t = @elapsed begin\n        d0 = F0*fsrc\n        G = J' * (d0 .- dobs)\n    end\n    G .*= wb_mask\n    Ï = .5*norm(d0 .- dobs)^2\n    if gscale == 0.0\n        # compute scalar from first gradient, apply to future gradients\n        global gscale = .25 ./ maximum(G) \n        @show gscale\n    end\n    G .*= gscale\n    return Ï, vec(G.data)\nend\n\n# struct to save the first gradient scalar\ngscale = 0f0\ng(x) = objective(F0, x, dobs, wb_mask)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"g (generic function with 1 method)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#Compute-gradient","page":"-","title":"Compute gradient","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"tgrad1 = @elapsed begin\n    grad1 = objective(F0, vec(m0), dobs, wb_mask)[2]\n    gscale = 0\nend\n@show tgrad1;","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"gscale = 3.164575347982762e-5\ntgrad1 = 20.692245796","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"dm = m0 .- m\ngrad1 = reshape(grad1, n)\nmg2 = reshape(m0 .- grad1, n)\nfigure(figsize=(8,9))\n\nsubplot(5,1,1)\nimshow(grad1' ./ maximum(abs,grad1),aspect=\"auto\",cmap=\"seismic\");\ncolorbar(orientation=\"vertical\");clim(-1,1);\ntitle(\"Initial Gradient without Illumination Compensation\");\n\nsubplot(5,1,2)\nimshow(dm ./ maximum(abs,dm),aspect=\"auto\",cmap=\"seismic\");\ncolorbar(orientation=\"vertical\");clim(-1,1);\ntitle(\"Squared slowness Difference: (m0 - m)\");\n\nsubplot(5,1,3)\nimshow(mg2',aspect=\"auto\",cmap=\"seismic\");\ncolorbar(orientation=\"vertical\");clim(vmin,vmax)\ntitle(\"Updated squared slowness: (m0 - grad1)\");\n\nsubplot(5,1,4)\nimshow(reshape(prj(mg2), n)',aspect=\"auto\",cmap=\"seismic\");\ncolorbar(orientation=\"vertical\");clim(vmin,vmax)\ntitle(\"Updated projected (bounds + TV) squared slowness: prj(m0 - grad1)\");\n\nsubplot(5,1,5)\nimshow(reshape(prj2(mg2), n)',aspect=\"auto\",cmap=\"seismic\");\ncolorbar(orientation=\"vertical\");clim(vmin,vmax)\ntitle(\"Updated projected (bounds) squared slowness: prj(m0 - grad1)\");\n\ntight_layout()","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"relative evolution to small, exiting PARSDMM (iteration 36)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"(Image: png)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"Hello\ninput to PARSDMM is feasible, returning","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#.-Perform-the-FWI-using-minConf_PQN","page":"-","title":"10. Perform the FWI using minConf_PQN","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"We will do 10 functions evaluation cost of projected quasi-Newton with two setup:","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"Bounds constraints only\nBounds + tv constrains","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"# FWI with PQN\nniter = 10\ngscale = 0f0\noptions_pqn = pqn_options(progTol=0, store_trace=true, verbose=3, maxIter=niter)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"JUDI.SLIM_optim.PQN_params(3, 1.0f-5, 0, 10, 0.0001f0, 10, false, false, true, 1.0f-6, 1.0f-7, 10, false, 20)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"sol = pqn(g, vec(m0), prj, options_pqn);","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"Running PQN...\nNumber of L-BFGS Corrections to store: 10\nSpectral initialization of SPG: 0\nMaximum number of SPG iterations: 10\nSPG optimality tolerance: 1.00e-06\nSPG progress tolerance: 1.00e-07\nPQN optimality tolerance: 1.00e-05\nPQN progress tolerance: 0.00e+00\nQuadratic initialization of line search: 0\nMaximum number of function evaluations: 10\ninput to PARSDMM is feasible, returning\ngscale = 3.164575347982762e-5\n Iteration   FunEvals Projections     Step Length    Function Val        Opt Cond\nrelative evolution to small, exiting PARSDMM (iteration 36)\n         0          0          0     0.00000e+00     7.56888e+05     6.44959e-02\nrelative evolution to small, exiting PARSDMM (iteration 36)\nrelative evolution to small, exiting PARSDMM (iteration 36)\nCubic Backtracking\nCubic Backtracking\n0.29970267128723044, (63001,)0.5874509773710214\nrelative evolution to small, exiting PARSDMM (iteration 31)\n         1          4          5     2.74241e-01     4.56943e+05     2.89910e-02\nrelative evolution to small, exiting PARSDMM (iteration 31)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 15)\n0.3645347021520138, (63001,)0.5415892004966736\nrelative evolution to small, exiting PARSDMM (iteration 26)\n         2          5         20     1.00000e+00     1.96831e+05     2.17257e-02\nrelative evolution to small, exiting PARSDMM (iteration 26)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 24)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 23)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 23)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 23)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 15)\n0.35030123218894005, (63001,)0.4920957423746586\nrelative evolution to small, exiting PARSDMM (iteration 27)\n         3          6         35     1.00000e+00     8.08809e+04     2.08072e-02\nrelative evolution to small, exiting PARSDMM (iteration 27)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 26)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 25)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 25)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 25)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 25)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 25)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 25)\nrelative evolution to small, exiting PARSDMM (iteration 15)\n0.3626699335873127, (63001,)0.4909360632300377\nrelative evolution to small, exiting PARSDMM (iteration 24)\n         4          7         52     1.00000e+00     4.65027e+04     2.76750e-02\nrelative evolution to small, exiting PARSDMM (iteration 24)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 25)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 24)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 24)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 25)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 24)\nrelative evolution to small, exiting PARSDMM (iteration 15)\n0.358932975679636, (63001,)0.478837039321661\nrelative evolution to small, exiting PARSDMM (iteration 14)\n         5          8         65     1.00000e+00     3.00094e+04     2.34035e-02\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 23)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 27)\nrelative evolution to small, exiting PARSDMM (iteration 27)\n0.3501978628337383, (63001,)0.4665626771748066\nrelative evolution to small, exiting PARSDMM (iteration 14)\n         6          9         72     1.00000e+00     1.73936e+04     2.05345e-02\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 26)\nrelative evolution to small, exiting PARSDMM (iteration 15)\n0.34992028027772903, (63001,)0.46518728509545326\nrelative evolution to small, exiting PARSDMM (iteration 14)\n         7         10         79     1.00000e+00     1.26443e+04     1.34957e-02\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 15)\n0.34455902641639113, (63001,)0.4601459242403507\nrelative evolution to small, exiting PARSDMM (iteration 14)\n         8         11         98     1.00000e+00     6.46003e+03     8.41045e-03\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 14)\n0.3416639202623628, (63001,)0.45731245446950197\nrelative evolution to small, exiting PARSDMM (iteration 14)\n         9         12        111     1.00000e+00     4.24626e+03     6.41516e-03\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 15)\nrelative evolution to small, exiting PARSDMM (iteration 14)\nrelative evolution to small, exiting PARSDMM (iteration 15)\n0.3406056523381267, (63001,)0.45664693508297205\nrelative evolution to small, exiting PARSDMM (iteration 14)\n        10         13        122     1.00000e+00     3.47106e+03     5.40122e-03","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"sol2 = minConf_PQN(g, vec(m0), prj2, options_pqn);","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"Running PQN...\nNumber of L-BFGS Corrections to store: 10\nSpectral initialization of SPG: 0\nMaximum number of SPG iterations: 10\nSPG optimality tolerance: 1.00e-06\nSPG progress tolerance: 1.00e-07\nPQN optimality tolerance: 1.00e-05\nPQN progress tolerance: 0.00e+00\nQuadratic initialization of line search: 0\nMaximum number of function evaluations: 10\ninput to PARSDMM is feasible, returning\n Iteration   FunEvals Projections     Step Length    Function Val        Opt Cond\ninput to PARSDMM is feasible, returning\n         0          0          0     0.00000e+00     7.56888e+05     2.50000e-01\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\nCubic Backtracking\n0.37986092867546234, (63001,)0.6480796155205198\nrelative evolution to small, exiting PARSDMM (iteration 15)\n         1          3          5     3.54968e-01     5.06750e+05     8.41055e-02\nrelative evolution to small, exiting PARSDMM (iteration 15)\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\n0.35521354526281357, (63001,)0.5054220408201218\ninput to PARSDMM is feasible, returning\n         2          4         24     1.00000e+00     1.11358e+05     5.56206e-02\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\n0.3701881654560566, (63001,)0.4869217425584793\ninput to PARSDMM is feasible, returning\n         3          5         39     1.00000e+00     6.61499e+04     4.28273e-02\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\n0.373028289526701, (63001,)0.47711528558284044\ninput to PARSDMM is feasible, returning\n         4          6         59     1.00000e+00     2.60822e+04     2.62599e-02\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\n0.379634543787688, (63001,)0.4776479071006179\ninput to PARSDMM is feasible, returning\n         5          7         79     1.00000e+00     1.40333e+04     2.08746e-02\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\n0.3758693804265931, (63001,)0.4798321803100407\ninput to PARSDMM is feasible, returning\n         6          8         99     1.00000e+00     5.61614e+03     9.52557e-03\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\n0.377302254550159, (63001,)0.483893642667681\ninput to PARSDMM is feasible, returning\n         7          9        119     1.00000e+00     3.39727e+03     9.15307e-03\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\n0.3752191723906435, (63001,)0.48195909010246396\ninput to PARSDMM is feasible, returning\n         8         10        139     1.00000e+00     2.48762e+03     6.99520e-03\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\n0.37440903729293495, (63001,)0.4817936853505671\ninput to PARSDMM is feasible, returning\n         9         11        159     1.00000e+00     1.94118e+03     5.18629e-03\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\ninput to PARSDMM is feasible, returning\n0.372569696046412, (63001,)0.48126206363667734\ninput to PARSDMM is feasible, returning\n        10         12        179     1.00000e+00     1.38128e+03     5.06586e-03","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"mf = reshape(prj(sol.sol), n) # optimal solution\nÏ = sol.f_trace   # cost vs iteration\nm1 = sol.x_trace  # model vs iteration\ncollect(m1[i] = reshape(m1[i], n) for i=1:length(Ï));","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"relative evolution to small, exiting PARSDMM (iteration 15)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"mf2 = reshape(prj(sol2.sol), n) # optimal solution\nÏ2 = sol2.f_trace   # cost vs iteration\nm2 = sol2.x_trace  # model vs iteration\ncollect(m2[i] = reshape(m2[i], n) for i=1:length(Ï2));","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"relative evolution to small, exiting PARSDMM (iteration 15)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#.-Visualize-velocity-models-and-objective-function","page":"-","title":"11. Visualize velocity models and objective function","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"figure(figsize=(8,9)); clf()\n\nsubplot(4,1,1);imshow(m0',aspect=\"auto\",cmap=\"jet\");\ncolorbar(orientation=\"vertical\");clim(vmin,vmax);title(\"Initial Velocity\");\n\nsubplot(4,1,2);imshow(mf2',aspect=\"auto\",cmap=\"jet\");\ncolorbar(orientation=\"vertical\");clim(vmin,vmax);title(\"FWI Velocity\");\n\nsubplot(4,1,3);imshow(mf',aspect=\"auto\",cmap=\"jet\");\ncolorbar(orientation=\"vertical\");clim(vmin,vmax);title(\"FWI Velocity with TV\");\n\nsubplot(4,1,4);imshow(m',aspect=\"auto\",cmap=\"jet\");\ncolorbar(orientation=\"vertical\");clim(vmin,vmax);title(\"True Velocity\")\n\ntight_layout()","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"(Image: png)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#Display-the-velocity-difference-models","page":"-","title":"Display the velocity difference models","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"rms_v2 = @sprintf(\"%.1f m/s\", sqrt(norm(m .- m0)^2 / length(m)))\nrms_vf = @sprintf(\"%.1f m/s\", sqrt(norm(m .- mf)^2 / length(m)))\nrms_vf2 = @sprintf(\"%.1f m/s\", sqrt(norm(m .- mf2)^2 / length(m)))\n\nfigure(figsize=(8,6)); clf()\n\nsubplot(3,1,1);imshow(m .- m0,aspect=\"auto\",cmap=\"seismic\");\ncolorbar(orientation=\"vertical\");clim(dmin,dmax);\ntitle(\"Vtrue - Vinit difference, rms=$(rms_v2)\");\n\nsubplot(3,1,2);imshow(m .- mf,aspect=\"auto\",cmap=\"seismic\");\ncolorbar(orientation=\"vertical\");clim(dmin,dmax);\ntitle(\"Vtrue - Vfwi difference, rms=$(rms_vf)\");\n\nsubplot(3,1,3);imshow(m .- mf2,aspect=\"auto\",cmap=\"seismic\");\ncolorbar(orientation=\"vertical\");clim(dmin,dmax);\ntitle(\"Vtrue - Vfwi_TV difference, rms=$(rms_vf2)\");\n\ntight_layout()","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"(Image: png)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#Display-the-cost-function","page":"-","title":"Display the cost function","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"figure(figsize=(8,4)); clf()\niters = [0:1:niter;]\nplot(Ï[2:end] ./ Ï[2], marker=\"o\", label=\"FWI_TV\")\nplot(Ï2[2:end] ./ Ï2[2], marker=\"o\", label=\"FWI\")\nylim([0,1.05])\nxlabel(\"Nonlinear Iteration\")\nylabel(\"Normalized cost ||f(v) - d||\")\ntitle(@sprintf(\"FWI Objective Function reduced %.1f percent and %.1f percent with TV\",\n               100 * (Ï[2] - Ï[end]) / Ï[2], 100 * (Ï2[2] - Ï2[end]) / Ï2[2]));\ntight_layout()","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"(Image: png)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#Display-data-misfit-vs-model-misfit","page":"-","title":"Display data misfit vs model misfit","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"figure(figsize=(8,4)); clf()\n\nc = [norm(m1[i] .- m, 2) for i in 1:length(m1)]\nc2 = [norm(m2[i] .- m, 2) for i in 1:length(m2)]\nloglog(c[2:end], Ï[2:end], label=\"FWI_TV\", marker=\"s\", linewidth=1)\nloglog(c2[2:end], Ï2[2:end], label=\"FWI\", marker=\"s\", linewidth=1)\nlegend()\nxlabel(\"Log Model residual\")\nylabel(\"Log Data residual\")\ntitle(\"Misfit Trajectory, LOOK AT THAT TV MODEL ERROR\");\ntight_layout()","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"(Image: png)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#.-Visualize-data-match","page":"-","title":"12. Visualize data match","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/#Generate-data-in-the-FWI-velocity-model","page":"-","title":"Generate data in the FWI velocity model","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"tf = @elapsed begin\n    F0.model.m .= vec(mf)\n    df = F0*fsrc;\nend\n@show tf;\n\ntf2 = @elapsed begin\n    F0.model.m .= vec(mf2)\n    df2 = F0*fsrc;\nend\n@show tf2;","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"tf = 8.125829833\ntf2 = 8.094312038","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#Compute-residuals","page":"-","title":"Compute residuals","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"rf = df - dobs;\nrf2 = df2 - dobs;","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#Plot-shot-gathers-for-true,-initial-model,-and-fwi-models","page":"-","title":"Plot shot gathers for true, initial model, and fwi models","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"The table below describes the data images below. We will flip the direction of the residual and modeled data in order to help display the match with the true data. We include the initial data as shown above for easier comparison. ","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"<table style=\"border:1px solid black;\" width=\"60%\"> <tr>   <td style=\"border:1px solid black; text-align:center;\" bgcolor=\"white\">       <b>Initial Residual Data<br>(flipped)</b></td>   <td style=\"border:1px solid black; text-align:center;\" bgcolor=\"white\">       <b>True Data</b></td>   <td style=\"border:1px solid black; text-align:center;\" bgcolor=\"white\">       <b>Initial Data<br>(flipped)</b></td> </tr> <tr>   <td style=\"border:1px solid black; text-align:center;\" bgcolor=\"white\">       <b>FWI Residual Data<br>(flipped)</b></td>   <td style=\"border:1px solid black; text-align:center;\" bgcolor=\"white\">       <b>True Data</b></td>   <td style=\"border:1px solid black; text-align:center;\" bgcolor=\"white\">       <b>FWI Data<br>(flipped)</b></td> </tr> </table>","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"We first make a function to create the plots that we can re-use for the selected shots.","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"zsrc = trunc.(zsrc; digits=6)\nfunction make_plot(index)\n    figure(figsize=(8,6)); clf()\n    cat2 = hcat(reverse(r.data[index],dims=2), pad, dobs.data[index], pad, reverse(d0.data[index],dims=2))\n    catf = hcat(reverse(rf.data[index],dims=2), pad, dobs.data[index], pad, reverse(df.data[index],dims=2))\n    catf2 = hcat(reverse(rf2.data[index],dims=2), pad, dobs.data[index], pad, reverse(df.data[index],dims=2))\n    subplot(3,1,1);\n    imshow(cat2,cmap=\"gray\",aspect=\"auto\",clim=[-1,+1]);\n    title(\" Initial Residual sz=$(zsrc[index])   ||   True sz=$(zsrc[index])   ||   Initial sz=$(zsrc[index]) (flipped)\");\n    subplot(3,1,2);\n    imshow(catf2,cmap=\"gray\",aspect=\"auto\",clim=[-1,+1]);\n    title(\" FWI Residual sz=$(zsrc[index])   ||   True sz=$(zsrc[index])   ||   FWI sz=$(zsrc[index]) (flipped)\");\n    tight_layout()\n    subplot(3,1,3);\n    imshow(catf,cmap=\"gray\",aspect=\"auto\",clim=[-1,+1]);\n    title(\"TV FWI Residual sz=$(zsrc[index])   ||   True sz=$(zsrc[index])   ||   FWI sz=$(zsrc[index]) (flipped)\");\n    tight_layout()\nend","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"make_plot (generic function with 1 method)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#Data-for-the-1st-shot,-generated-in-the-initial-and-FWI-models","page":"-","title":"Data for the 1st shot, generated in the initial and FWI models","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"make_plot(1)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"(Image: png)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#Data-for-the-4th-shot,-generated-in-the-initial-and-FWI-models","page":"-","title":"Data for the 4th shot, generated in the initial and FWI models","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"make_plot(4)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"(Image: png)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#Data-for-the-8th-shot,-generated-in-the-initial-and-FWI-models","page":"-","title":"Data for the 8th shot, generated in the initial and FWI models","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"make_plot(8)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"(Image: png)","category":"page"},{"location":"tutorials/03_constr_fwi_judi/#.-Remove-workers","page":"-","title":"14. Remove workers","text":"","category":"section"},{"location":"tutorials/03_constr_fwi_judi/","page":"-","title":"-","text":"rmprocs(workers());","category":"page"},{"location":"#SLimOptim.jl-documentation","page":"Home","title":"SLimOptim.jl documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Line-searches","page":"Home","title":"Line searches","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Line search utuility function that calls LineSearches.jl, this function is used for the line search at each iteration in spg and pqn and can be used by itslef as weel. For convenience the linesearches are all exported and available.","category":"page"},{"location":"","page":"Home","title":"Home","text":"linesearch","category":"page"},{"location":"#SlimOptim.linesearch","page":"Home","title":"SlimOptim.linesearch","text":"linesearch(ls, sol, d, f, g!, fg!, t, funRef, gtd, gvec)\n\nLine search interface to LineSearches.jl\n\nArguments\n\nls: Line search structure (see LineSearches.jl documentation)\nf: Objective function, x -> f(x)\ng!`: Gradient in place function, x-> (g.= gradient(x))\nfg!`: Objective and in place gradient function, x-> (f = f(x); g.= gradient(x))\nt: Initial steplength gess\nfunRef: Reference objective function value\ngtd: Reference direction inner product dot(g0, d0)\ngvec: prealocated array for thhe gradient\n\n\n\n\n\n","category":"function"},{"location":"#SPG","page":"Home","title":"SPG","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Spectral Projected gradient algorithm adapted from min_Conf for constrained optimization.","category":"page"},{"location":"","page":"Home","title":"Home","text":"spg","category":"page"},{"location":"#SlimOptim.spg","page":"Home","title":"SlimOptim.spg","text":"spg(funObj, x, funProj, options)\n\nFunction for using Spectral Projected Gradient to solve problems of the form   min funObj(x) s.t. x in C\n\nArguments\n\nfunObj(x):function to minimize (returns gradient as second argument)\nfunProj(x): function that returns projection of x onto C\nx: Initial guess\noptions: spg_options structure\n\nNotes:\n\nif the projection is expensive to compute, you can reduce the number of projections by setting testOpt to 0 in the options\nAdapted fromt he matlab implementation of minConf_SPG\n\n\n\n\n\nspg(f, g!, fg!, x, funProj, options)\n\nFunction for using Spectral Projected Gradient to solve problems of the form min funObj(x) s.t. x in C\n\nArguments\n\nf(x): function to minimize (returns objective only)\ng!(g, x): gradient of function (in place)\nfg!(g, x): objective and gradient (in place)\nfunProj(x): function that returns projection of x onto C\nx: Initial guess\noptions: spg_options structure\n\nNotes:\n\nif the projection is expensive to compute, you can reduce the     number of projections by setting testOpt to 0 in the options\nAdapted fromt he matlab implementation of minConf_SPG\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"The algorithms uses the following options:","category":"page"},{"location":"","page":"Home","title":"Home","text":"spg_options","category":"page"},{"location":"#SlimOptim.spg_options","page":"Home","title":"SlimOptim.spg_options","text":"spg_options(;verbose=3,optTol=1f-5,progTol=1f-7,\n            maxIter=20,suffDec=1f-4,memory=2,\n            useSpectral=true,curvilinear=false,\n            feasibleInit=false,testOpt=true,\n            bbType=true,testInit=false, store_trace=false,\n            optNorm=Inf,iniStep=1f0, maxLinesearchIter=10)\n\nOptions structure for Spectral Project Gradient algorithm.\n\nArguments\n\nverbose: level of verbosity (0: no output, 1: iter (default))\noptTol: tolerance used to check for optimality (default: 1e-5)\nprogTol: tolerance used to check for lack of progress (default: 1e-9)\nmaxIter: maximum number of iterations (default: 20)\nsuffDec: sufficient decrease parameter in Armijo condition (default: 1e-4)\nmemory: number of steps to look back in non-monotone Armijo condition\nuseSpectral: use spectral scaling of gradient direction (default: 1)\ncurvilinear: backtrack along projection Arc (default: 0)\ntestOpt: test optimality condition (default: 1)\nfeasibleInit: if 1, then the initial point is assumed to be feasible\nbbType: type of Barzilai Borwein step (default: 1)\ntestInit: Whether to test the initial estimate for optimality (default: false)\nstore_trace: Whether to store the trace/history of x (default: false)\noptNorm: First-Order Optimality Conditions norm (default: Inf)\niniStep: Initial step length estimate (default: 1)\nmaxLinesearchIter: Maximum number of line search iteration (default: 20)\n\n\n\n\n\n","category":"function"},{"location":"#PQN","page":"Home","title":"PQN","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Projected Quasi-Newton algorithm adapted from min_Conf for constrained optimization.","category":"page"},{"location":"","page":"Home","title":"Home","text":"pqn","category":"page"},{"location":"#SlimOptim.pqn","page":"Home","title":"SlimOptim.pqn","text":"pqn(objective, x, projection, options)\n\nFunction for using a limited-memory projected quasi-Newton to solve problems of the form   min objective(x) s.t. x in C\n\nThe projected quasi-Newton sub-problems are solved the spectral projected gradient algorithm\n\nArguments\n\nfunObj(x): function to minimize (returns gradient as second argument)\nfunProj(x): function that returns projection of x onto C\nx: Initial guess\noptions: pqn_options structure\n\nNotes:\n\nAdapted fromt he matlab implementation of minConf_PQN\n\n\n\n\n\npqn(f, g!, fg!, x, projection,options)\n\nFunction for using a limited-memory projected quasi-Newton to solve problems of the form   min objective(x) s.t. x in C\n\nThe projected quasi-Newton sub-problems are solved the spectral projected gradient algorithm.\n\nArguments\n\nf(x): function to minimize (returns objective only)\ng!(g, x): gradient of function (in place)\nfg!(g, x): objective and gradient (in place)\nfunProj(x): function that returns projection of x onto C\nx: Initial guess\noptions: pqn_options structure\n\nNotes:\n\nAdapted fromt he matlab implementation of minConf_PQN\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"The algorithms uses the following options:","category":"page"},{"location":"","page":"Home","title":"Home","text":"pqn_options","category":"page"},{"location":"#SlimOptim.pqn_options","page":"Home","title":"SlimOptim.pqn_options","text":"pqn_options(;verbose=2, optTol=1f-5, progTol=1f-7,\n            maxIter=20, suffDec=1f-4, corrections=10, adjustStep=false,\n            bbInit=false, store_trace=false, SPGoptTol=1f-6, SPGprogTol=1f-7,\n            SPGiters=10, SPGtestOpt=false, maxLinesearchIter=20)\n\nOptions structure for Spectral Project Gradient algorithm.\n\nArguments\n\nverbose: level of verbosity (0: no output, 1: iter (default))\noptTol: tolerance used to check for optimality (default: 1e-5)\nprogTol: tolerance used to check for progress (default: 1e-9)\nmaxIter: maximum number of iterations (default: 20)\nsuffDec: sufficient decrease parameter in Armijo condition (default: 1e-4)\ncorrections: number of lbfgs corrections to store (default: 10)\nadjustStep: use quadratic initialization of line search (default: 0)\nbbInit: initialize sub-problem with Barzilai-Borwein step (default: 1)\nstore_trace: Whether to store the trace/history of x (default: false)\nSPGoptTol: optimality tolerance for SPG direction finding (default: 1e-6)\nSPGprogTol: SPG tolerance used to check for progress (default: 1e-7)\nSPGiters: maximum number of iterations for SPG direction finding (default:10)\nSPGtestOpt: Whether to check for optimality in SPG (default: false)\nmaxLinesearchIter: Maximum number of line search iteration (default: 20)\nmemory: Number of steps for the non-monotone functional decrease condition.\niniStep: Initial step length estimate (default: 1). Ignored with adjustStep.\n\n\n\n\n\n","category":"function"},{"location":"#Linearized-bregman","page":"Home","title":"Linearized bregman","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Linearized bregman iteration for split feasability problems.","category":"page"},{"location":"","page":"Home","title":"Home","text":"bregman_options","category":"page"},{"location":"#SlimOptim.bregman_options","page":"Home","title":"SlimOptim.bregman_options","text":"bregman_options(;verbose=1, optTol=1e-6, progTol=1e-8, maxIter=20\n                store_trace=false, linesearch=false, alpha=.25)\n\nOptions structure for the bregman iteration algorithm\n\nArguments\n\nverbose: level of verbosity (0: no output, 1: final, 2: iter (default), 3: debug)\nprogTol: tolerance used to check for lack of progress (default: 1e-9)\nmaxIter: maximum number of iterations (default: 20)\nstore_trace: Whether to store the trace/history of x (default: false)\nantichatter: Whether to use anti-chatter step length correction\nquantile: Thresholding level as quantile value, (default=.95 i.e thresholds 95% of the vector)\nalpha: Strong convexity modulus. (step length is Î± fracr_2^2g_2^2)\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"bregman","category":"page"},{"location":"#SlimOptim.bregman","page":"Home","title":"SlimOptim.bregman","text":"bregman(A, TD, x, b, options)\n\nLinearized bregman iteration for the system\n\nfrac12 TD  x_2^2 + Î» TD  x_1     st Ax = b\n\nFor example, for sparsity promoting denoising (i.e LSRTM)\n\nArguments\n\nTD: curvelet transform\nA: Forward operator (J or preconditioned J for LSRTM)\nb: observed data\nx: Initial guess\n\n\n\n\n\nbregman(fun, TD, x, b, options)\n\nLinearized bregman iteration for the system\n\nfrac12 TD  x_2^2 + Î» TD  x_1     st Ax = b\n\nFor example, for sparsity promoting denoising (i.e LSRTM)\n\nArguments\n\nTD: curvelet transform\nfun: residual function, return the tuple (f = frac12Ax - b_2, g = A^T(Ax - b))\nb: observed data\nx: Initial guess\n\n\n\n\n\n","category":"function"}]
}
